//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace CodePlex.TfsLibrary.RepositoryWebSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RepositorySoap", Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Repository : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddConflictOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPendingChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAnnotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCheckinNoteDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorkspaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAnnotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteShelvesetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkspaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DestroyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepositoryPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LabelItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback MergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PendChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAnnotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBranchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryChangesetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryChangesForChangesetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCheckinNoteDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCheckinNoteFieldNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryConflictsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryEffectiveGlobalPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryEffectiveItemPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFileTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGlobalPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLocalVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryItemsExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryItemPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLabelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMergeCandidatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMergesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMergesWithDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPendingSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPendingChangesForWorkspaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryShelvedChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryShelvesetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryWorkspaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryWorkspacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshIdentityDisplayNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLocalConflictOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFileTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShelveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UndoPendingChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlabelItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnshelveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChangesetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCheckinNoteFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGlobalSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateItemSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLocalVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePendingStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkspaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPendingChangesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryItemsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTeamProjectFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBranchOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Repository() {
            this.Url = global::CodePlex.TfsLibrary.Properties.Settings.Default.TfsObjectModel_RepositoryWebSvc_Repository;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddConflictCompletedEventHandler AddConflictCompleted;
        
        /// <remarks/>
        public event CheckAuthenticationCompletedEventHandler CheckAuthenticationCompleted;
        
        /// <remarks/>
        public event CheckInCompletedEventHandler CheckInCompleted;
        
        /// <remarks/>
        public event CheckPendingChangesCompletedEventHandler CheckPendingChangesCompleted;
        
        /// <remarks/>
        public event CreateAnnotationCompletedEventHandler CreateAnnotationCompleted;
        
        /// <remarks/>
        public event CreateCheckinNoteDefinitionCompletedEventHandler CreateCheckinNoteDefinitionCompleted;
        
        /// <remarks/>
        public event CreateWorkspaceCompletedEventHandler CreateWorkspaceCompleted;
        
        /// <remarks/>
        public event DeleteAnnotationCompletedEventHandler DeleteAnnotationCompleted;
        
        /// <remarks/>
        public event DeleteLabelCompletedEventHandler DeleteLabelCompleted;
        
        /// <remarks/>
        public event DeleteShelvesetCompletedEventHandler DeleteShelvesetCompleted;
        
        /// <remarks/>
        public event DeleteWorkspaceCompletedEventHandler DeleteWorkspaceCompleted;
        
        /// <remarks/>
        public event DestroyCompletedEventHandler DestroyCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetRepositoryPropertiesCompletedEventHandler GetRepositoryPropertiesCompleted;
        
        /// <remarks/>
        public event LabelItemCompletedEventHandler LabelItemCompleted;
        
        /// <remarks/>
        public event MergeCompletedEventHandler MergeCompleted;
        
        /// <remarks/>
        public event PendChangesCompletedEventHandler PendChangesCompleted;
        
        /// <remarks/>
        public event QueryAnnotationCompletedEventHandler QueryAnnotationCompleted;
        
        /// <remarks/>
        public event QueryBranchesCompletedEventHandler QueryBranchesCompleted;
        
        /// <remarks/>
        public event QueryChangesetCompletedEventHandler QueryChangesetCompleted;
        
        /// <remarks/>
        public event QueryChangesForChangesetCompletedEventHandler QueryChangesForChangesetCompleted;
        
        /// <remarks/>
        public event QueryCheckinNoteDefinitionCompletedEventHandler QueryCheckinNoteDefinitionCompleted;
        
        /// <remarks/>
        public event QueryCheckinNoteFieldNamesCompletedEventHandler QueryCheckinNoteFieldNamesCompleted;
        
        /// <remarks/>
        public event QueryConflictsCompletedEventHandler QueryConflictsCompleted;
        
        /// <remarks/>
        public event QueryEffectiveGlobalPermissionsCompletedEventHandler QueryEffectiveGlobalPermissionsCompleted;
        
        /// <remarks/>
        public event QueryEffectiveItemPermissionsCompletedEventHandler QueryEffectiveItemPermissionsCompleted;
        
        /// <remarks/>
        public event QueryFileTypesCompletedEventHandler QueryFileTypesCompleted;
        
        /// <remarks/>
        public event QueryGlobalPermissionsCompletedEventHandler QueryGlobalPermissionsCompleted;
        
        /// <remarks/>
        public event QueryHistoryCompletedEventHandler QueryHistoryCompleted;
        
        /// <remarks/>
        public event QueryItemsCompletedEventHandler QueryItemsCompleted;
        
        /// <remarks/>
        public event QueryLocalVersionsCompletedEventHandler QueryLocalVersionsCompleted;
        
        /// <remarks/>
        public event QueryItemsExtendedCompletedEventHandler QueryItemsExtendedCompleted;
        
        /// <remarks/>
        public event QueryItemPermissionsCompletedEventHandler QueryItemPermissionsCompleted;
        
        /// <remarks/>
        public event QueryLabelsCompletedEventHandler QueryLabelsCompleted;
        
        /// <remarks/>
        public event QueryMergeCandidatesCompletedEventHandler QueryMergeCandidatesCompleted;
        
        /// <remarks/>
        public event QueryMergesCompletedEventHandler QueryMergesCompleted;
        
        /// <remarks/>
        public event QueryMergesWithDetailsCompletedEventHandler QueryMergesWithDetailsCompleted;
        
        /// <remarks/>
        public event QueryPendingSetsCompletedEventHandler QueryPendingSetsCompleted;
        
        /// <remarks/>
        public event QueryPendingChangesForWorkspaceCompletedEventHandler QueryPendingChangesForWorkspaceCompleted;
        
        /// <remarks/>
        public event QueryShelvedChangesCompletedEventHandler QueryShelvedChangesCompleted;
        
        /// <remarks/>
        public event QueryShelvesetsCompletedEventHandler QueryShelvesetsCompleted;
        
        /// <remarks/>
        public event QueryWorkspaceCompletedEventHandler QueryWorkspaceCompleted;
        
        /// <remarks/>
        public event QueryWorkspacesCompletedEventHandler QueryWorkspacesCompleted;
        
        /// <remarks/>
        public event RefreshIdentityDisplayNameCompletedEventHandler RefreshIdentityDisplayNameCompleted;
        
        /// <remarks/>
        public event RemoveLocalConflictCompletedEventHandler RemoveLocalConflictCompleted;
        
        /// <remarks/>
        public event ResolveCompletedEventHandler ResolveCompleted;
        
        /// <remarks/>
        public event SetFileTypesCompletedEventHandler SetFileTypesCompleted;
        
        /// <remarks/>
        public event ShelveCompletedEventHandler ShelveCompleted;
        
        /// <remarks/>
        public event UndoPendingChangesCompletedEventHandler UndoPendingChangesCompleted;
        
        /// <remarks/>
        public event UnlabelItemCompletedEventHandler UnlabelItemCompleted;
        
        /// <remarks/>
        public event UnshelveCompletedEventHandler UnshelveCompleted;
        
        /// <remarks/>
        public event UpdateChangesetCompletedEventHandler UpdateChangesetCompleted;
        
        /// <remarks/>
        public event UpdateCheckinNoteFieldNameCompletedEventHandler UpdateCheckinNoteFieldNameCompleted;
        
        /// <remarks/>
        public event UpdateGlobalSecurityCompletedEventHandler UpdateGlobalSecurityCompleted;
        
        /// <remarks/>
        public event UpdateItemSecurityCompletedEventHandler UpdateItemSecurityCompleted;
        
        /// <remarks/>
        public event UpdateLocalVersionCompletedEventHandler UpdateLocalVersionCompleted;
        
        /// <remarks/>
        public event UpdatePendingStateCompletedEventHandler UpdatePendingStateCompleted;
        
        /// <remarks/>
        public event UpdateWorkspaceCompletedEventHandler UpdateWorkspaceCompleted;
        
        /// <remarks/>
        public event QueryPendingChangesByIdCompletedEventHandler QueryPendingChangesByIdCompleted;
        
        /// <remarks/>
        public event QueryItemsByIdCompletedEventHandler QueryItemsByIdCompleted;
        
        /// <remarks/>
        public event CreateTeamProjectFolderCompletedEventHandler CreateTeamProjectFolderCompleted;
        
        /// <remarks/>
        public event CreateBranchCompletedEventHandler CreateBranchCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/AddConflict", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddConflict(string workspaceName, string ownerName, ConflictType conflictType, int itemId, int versionFrom, int pendingChangeId, string sourceLocalItem, string targetLocalItem, int reason) {
            this.Invoke("AddConflict", new object[] {
                        workspaceName,
                        ownerName,
                        conflictType,
                        itemId,
                        versionFrom,
                        pendingChangeId,
                        sourceLocalItem,
                        targetLocalItem,
                        reason});
        }
        
        /// <remarks/>
        public void AddConflictAsync(string workspaceName, string ownerName, ConflictType conflictType, int itemId, int versionFrom, int pendingChangeId, string sourceLocalItem, string targetLocalItem, int reason) {
            this.AddConflictAsync(workspaceName, ownerName, conflictType, itemId, versionFrom, pendingChangeId, sourceLocalItem, targetLocalItem, reason, null);
        }
        
        /// <remarks/>
        public void AddConflictAsync(string workspaceName, string ownerName, ConflictType conflictType, int itemId, int versionFrom, int pendingChangeId, string sourceLocalItem, string targetLocalItem, int reason, object userState) {
            if ((this.AddConflictOperationCompleted == null)) {
                this.AddConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConflictOperationCompleted);
            }
            this.InvokeAsync("AddConflict", new object[] {
                        workspaceName,
                        ownerName,
                        conflictType,
                        itemId,
                        versionFrom,
                        pendingChangeId,
                        sourceLocalItem,
                        targetLocalItem,
                        reason}, this.AddConflictOperationCompleted, userState);
        }
        
        private void OnAddConflictOperationCompleted(object arg) {
            if ((this.AddConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConflictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CheckAuthentication", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAuthentication() {
            object[] results = this.Invoke("CheckAuthentication", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAuthenticationAsync() {
            this.CheckAuthenticationAsync(null);
        }
        
        /// <remarks/>
        public void CheckAuthenticationAsync(object userState) {
            if ((this.CheckAuthenticationOperationCompleted == null)) {
                this.CheckAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAuthenticationOperationCompleted);
            }
            this.InvokeAsync("CheckAuthentication", new object[0], this.CheckAuthenticationOperationCompleted, userState);
        }
        
        private void OnCheckAuthenticationOperationCompleted(object arg) {
            if ((this.CheckAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAuthenticationCompleted(this, new CheckAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CheckIn", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckinResult CheckIn(string workspaceName, string ownerName, string[] serverItems, Changeset info, CheckinNotificationInfo checkinNotificationInfo, CheckinOptions checkinOptions, bool deferCheckIn, int checkInTicket, out Failure[] failures) {
            object[] results = this.Invoke("CheckIn", new object[] {
                        workspaceName,
                        ownerName,
                        serverItems,
                        info,
                        checkinNotificationInfo,
                        checkinOptions,
                        deferCheckIn,
                        checkInTicket});
            failures = ((Failure[])(results[1]));
            return ((CheckinResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInAsync(string workspaceName, string ownerName, string[] serverItems, Changeset info, CheckinNotificationInfo checkinNotificationInfo, CheckinOptions checkinOptions, bool deferCheckIn, int checkInTicket) {
            this.CheckInAsync(workspaceName, ownerName, serverItems, info, checkinNotificationInfo, checkinOptions, deferCheckIn, checkInTicket, null);
        }
        
        /// <remarks/>
        public void CheckInAsync(string workspaceName, string ownerName, string[] serverItems, Changeset info, CheckinNotificationInfo checkinNotificationInfo, CheckinOptions checkinOptions, bool deferCheckIn, int checkInTicket, object userState) {
            if ((this.CheckInOperationCompleted == null)) {
                this.CheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInOperationCompleted);
            }
            this.InvokeAsync("CheckIn", new object[] {
                        workspaceName,
                        ownerName,
                        serverItems,
                        info,
                        checkinNotificationInfo,
                        checkinOptions,
                        deferCheckIn,
                        checkInTicket}, this.CheckInOperationCompleted, userState);
        }
        
        private void OnCheckInOperationCompleted(object arg) {
            if ((this.CheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInCompleted(this, new CheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CheckPendingChanges", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Failure[] CheckPendingChanges(string workspaceName, string ownerName, string[] serverItems) {
            object[] results = this.Invoke("CheckPendingChanges", new object[] {
                        workspaceName,
                        ownerName,
                        serverItems});
            return ((Failure[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckPendingChangesAsync(string workspaceName, string ownerName, string[] serverItems) {
            this.CheckPendingChangesAsync(workspaceName, ownerName, serverItems, null);
        }
        
        /// <remarks/>
        public void CheckPendingChangesAsync(string workspaceName, string ownerName, string[] serverItems, object userState) {
            if ((this.CheckPendingChangesOperationCompleted == null)) {
                this.CheckPendingChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPendingChangesOperationCompleted);
            }
            this.InvokeAsync("CheckPendingChanges", new object[] {
                        workspaceName,
                        ownerName,
                        serverItems}, this.CheckPendingChangesOperationCompleted, userState);
        }
        
        private void OnCheckPendingChangesOperationCompleted(object arg) {
            if ((this.CheckPendingChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPendingChangesCompleted(this, new CheckPendingChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CreateAnnotation", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateAnnotation(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue, string Comment, bool Overwrite) {
            this.Invoke("CreateAnnotation", new object[] {
                        AnnotationName,
                        AnnotatedItem,
                        Version,
                        AnnotationValue,
                        Comment,
                        Overwrite});
        }
        
        /// <remarks/>
        public void CreateAnnotationAsync(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue, string Comment, bool Overwrite) {
            this.CreateAnnotationAsync(AnnotationName, AnnotatedItem, Version, AnnotationValue, Comment, Overwrite, null);
        }
        
        /// <remarks/>
        public void CreateAnnotationAsync(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue, string Comment, bool Overwrite, object userState) {
            if ((this.CreateAnnotationOperationCompleted == null)) {
                this.CreateAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAnnotationOperationCompleted);
            }
            this.InvokeAsync("CreateAnnotation", new object[] {
                        AnnotationName,
                        AnnotatedItem,
                        Version,
                        AnnotationValue,
                        Comment,
                        Overwrite}, this.CreateAnnotationOperationCompleted, userState);
        }
        
        private void OnCreateAnnotationOperationCompleted(object arg) {
            if ((this.CreateAnnotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAnnotationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CreateCheckinNoteDefinition", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateCheckinNoteDefinition(string associatedServerItem, CheckinNoteFieldDefinition[] checkinNoteFields) {
            this.Invoke("CreateCheckinNoteDefinition", new object[] {
                        associatedServerItem,
                        checkinNoteFields});
        }
        
        /// <remarks/>
        public void CreateCheckinNoteDefinitionAsync(string associatedServerItem, CheckinNoteFieldDefinition[] checkinNoteFields) {
            this.CreateCheckinNoteDefinitionAsync(associatedServerItem, checkinNoteFields, null);
        }
        
        /// <remarks/>
        public void CreateCheckinNoteDefinitionAsync(string associatedServerItem, CheckinNoteFieldDefinition[] checkinNoteFields, object userState) {
            if ((this.CreateCheckinNoteDefinitionOperationCompleted == null)) {
                this.CreateCheckinNoteDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCheckinNoteDefinitionOperationCompleted);
            }
            this.InvokeAsync("CreateCheckinNoteDefinition", new object[] {
                        associatedServerItem,
                        checkinNoteFields}, this.CreateCheckinNoteDefinitionOperationCompleted, userState);
        }
        
        private void OnCreateCheckinNoteDefinitionOperationCompleted(object arg) {
            if ((this.CreateCheckinNoteDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCheckinNoteDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CreateWorkspace", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Workspace CreateWorkspace(Workspace workspace) {
            object[] results = this.Invoke("CreateWorkspace", new object[] {
                        workspace});
            return ((Workspace)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorkspaceAsync(Workspace workspace) {
            this.CreateWorkspaceAsync(workspace, null);
        }
        
        /// <remarks/>
        public void CreateWorkspaceAsync(Workspace workspace, object userState) {
            if ((this.CreateWorkspaceOperationCompleted == null)) {
                this.CreateWorkspaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorkspaceOperationCompleted);
            }
            this.InvokeAsync("CreateWorkspace", new object[] {
                        workspace}, this.CreateWorkspaceOperationCompleted, userState);
        }
        
        private void OnCreateWorkspaceOperationCompleted(object arg) {
            if ((this.CreateWorkspaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorkspaceCompleted(this, new CreateWorkspaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/DeleteAnnotation", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAnnotation(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue) {
            this.Invoke("DeleteAnnotation", new object[] {
                        AnnotationName,
                        AnnotatedItem,
                        Version,
                        AnnotationValue});
        }
        
        /// <remarks/>
        public void DeleteAnnotationAsync(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue) {
            this.DeleteAnnotationAsync(AnnotationName, AnnotatedItem, Version, AnnotationValue, null);
        }
        
        /// <remarks/>
        public void DeleteAnnotationAsync(string AnnotationName, string AnnotatedItem, int Version, string AnnotationValue, object userState) {
            if ((this.DeleteAnnotationOperationCompleted == null)) {
                this.DeleteAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAnnotationOperationCompleted);
            }
            this.InvokeAsync("DeleteAnnotation", new object[] {
                        AnnotationName,
                        AnnotatedItem,
                        Version,
                        AnnotationValue}, this.DeleteAnnotationOperationCompleted, userState);
        }
        
        private void OnDeleteAnnotationOperationCompleted(object arg) {
            if ((this.DeleteAnnotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAnnotationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/DeleteLabel", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LabelResult[] DeleteLabel(string labelName, string labelScope) {
            object[] results = this.Invoke("DeleteLabel", new object[] {
                        labelName,
                        labelScope});
            return ((LabelResult[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLabelAsync(string labelName, string labelScope) {
            this.DeleteLabelAsync(labelName, labelScope, null);
        }
        
        /// <remarks/>
        public void DeleteLabelAsync(string labelName, string labelScope, object userState) {
            if ((this.DeleteLabelOperationCompleted == null)) {
                this.DeleteLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLabelOperationCompleted);
            }
            this.InvokeAsync("DeleteLabel", new object[] {
                        labelName,
                        labelScope}, this.DeleteLabelOperationCompleted, userState);
        }
        
        private void OnDeleteLabelOperationCompleted(object arg) {
            if ((this.DeleteLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLabelCompleted(this, new DeleteLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/DeleteShelveset", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteShelveset(string shelvesetName, string ownerName) {
            this.Invoke("DeleteShelveset", new object[] {
                        shelvesetName,
                        ownerName});
        }
        
        /// <remarks/>
        public void DeleteShelvesetAsync(string shelvesetName, string ownerName) {
            this.DeleteShelvesetAsync(shelvesetName, ownerName, null);
        }
        
        /// <remarks/>
        public void DeleteShelvesetAsync(string shelvesetName, string ownerName, object userState) {
            if ((this.DeleteShelvesetOperationCompleted == null)) {
                this.DeleteShelvesetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteShelvesetOperationCompleted);
            }
            this.InvokeAsync("DeleteShelveset", new object[] {
                        shelvesetName,
                        ownerName}, this.DeleteShelvesetOperationCompleted, userState);
        }
        
        private void OnDeleteShelvesetOperationCompleted(object arg) {
            if ((this.DeleteShelvesetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteShelvesetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/DeleteWorkspace", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWorkspace(string workspaceName, string ownerName) {
            this.Invoke("DeleteWorkspace", new object[] {
                        workspaceName,
                        ownerName});
        }
        
        /// <remarks/>
        public void DeleteWorkspaceAsync(string workspaceName, string ownerName) {
            this.DeleteWorkspaceAsync(workspaceName, ownerName, null);
        }
        
        /// <remarks/>
        public void DeleteWorkspaceAsync(string workspaceName, string ownerName, object userState) {
            if ((this.DeleteWorkspaceOperationCompleted == null)) {
                this.DeleteWorkspaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkspaceOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkspace", new object[] {
                        workspaceName,
                        ownerName}, this.DeleteWorkspaceOperationCompleted, userState);
        }
        
        private void OnDeleteWorkspaceOperationCompleted(object arg) {
            if ((this.DeleteWorkspaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkspaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Destroy", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Item[] Destroy(ItemSpec item, VersionSpec versionSpec, VersionSpec stopAtSpec, int flags, out Failure[] failures, out PendingSet[] pendingChanges, out PendingSet[] shelvedChanges) {
            object[] results = this.Invoke("Destroy", new object[] {
                        item,
                        versionSpec,
                        stopAtSpec,
                        flags});
            failures = ((Failure[])(results[1]));
            pendingChanges = ((PendingSet[])(results[2]));
            shelvedChanges = ((PendingSet[])(results[3]));
            return ((Item[])(results[0]));
        }
        
        /// <remarks/>
        public void DestroyAsync(ItemSpec item, VersionSpec versionSpec, VersionSpec stopAtSpec, int flags) {
            this.DestroyAsync(item, versionSpec, stopAtSpec, flags, null);
        }
        
        /// <remarks/>
        public void DestroyAsync(ItemSpec item, VersionSpec versionSpec, VersionSpec stopAtSpec, int flags, object userState) {
            if ((this.DestroyOperationCompleted == null)) {
                this.DestroyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDestroyOperationCompleted);
            }
            this.InvokeAsync("Destroy", new object[] {
                        item,
                        versionSpec,
                        stopAtSpec,
                        flags}, this.DestroyOperationCompleted, userState);
        }
        
        private void OnDestroyOperationCompleted(object arg) {
            if ((this.DestroyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DestroyCompleted(this, new DestroyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Get", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfGetOperation")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public GetOperation[][] Get(string workspaceName, string ownerName, GetRequest[] requests, bool force, bool noGet, int maxResults, int options) {
            object[] results = this.Invoke("Get", new object[] {
                        workspaceName,
                        ownerName,
                        requests,
                        force,
                        noGet,
                        maxResults,
                        options});
            return ((GetOperation[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string workspaceName, string ownerName, GetRequest[] requests, bool force, bool noGet, int maxResults, int options) {
            this.GetAsync(workspaceName, ownerName, requests, force, noGet, maxResults, options, null);
        }
        
        /// <remarks/>
        public void GetAsync(string workspaceName, string ownerName, GetRequest[] requests, bool force, bool noGet, int maxResults, int options, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        workspaceName,
                        ownerName,
                        requests,
                        force,
                        noGet,
                        maxResults,
                        options}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/GetRepositoryProperties", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RepositoryProperties GetRepositoryProperties() {
            object[] results = this.Invoke("GetRepositoryProperties", new object[0]);
            return ((RepositoryProperties)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepositoryPropertiesAsync() {
            this.GetRepositoryPropertiesAsync(null);
        }
        
        /// <remarks/>
        public void GetRepositoryPropertiesAsync(object userState) {
            if ((this.GetRepositoryPropertiesOperationCompleted == null)) {
                this.GetRepositoryPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepositoryPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetRepositoryProperties", new object[0], this.GetRepositoryPropertiesOperationCompleted, userState);
        }
        
        private void OnGetRepositoryPropertiesOperationCompleted(object arg) {
            if ((this.GetRepositoryPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepositoryPropertiesCompleted(this, new GetRepositoryPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/LabelItem", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LabelResult[] LabelItem(string workspaceName, string workspaceOwner, VersionControlLabel label, LabelItemSpec[] labelSpecs, LabelChildOption children, out Failure[] failures) {
            object[] results = this.Invoke("LabelItem", new object[] {
                        workspaceName,
                        workspaceOwner,
                        label,
                        labelSpecs,
                        children});
            failures = ((Failure[])(results[1]));
            return ((LabelResult[])(results[0]));
        }
        
        /// <remarks/>
        public void LabelItemAsync(string workspaceName, string workspaceOwner, VersionControlLabel label, LabelItemSpec[] labelSpecs, LabelChildOption children) {
            this.LabelItemAsync(workspaceName, workspaceOwner, label, labelSpecs, children, null);
        }
        
        /// <remarks/>
        public void LabelItemAsync(string workspaceName, string workspaceOwner, VersionControlLabel label, LabelItemSpec[] labelSpecs, LabelChildOption children, object userState) {
            if ((this.LabelItemOperationCompleted == null)) {
                this.LabelItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLabelItemOperationCompleted);
            }
            this.InvokeAsync("LabelItem", new object[] {
                        workspaceName,
                        workspaceOwner,
                        label,
                        labelSpecs,
                        children}, this.LabelItemOperationCompleted, userState);
        }
        
        private void OnLabelItemOperationCompleted(object arg) {
            if ((this.LabelItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LabelItemCompleted(this, new LabelItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Merge", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetOperation[] Merge(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target, VersionSpec from, VersionSpec to, MergeOptions options, LockLevel lockLevel, int optionsEx, out Failure[] failures, out Conflict[] conflicts) {
            object[] results = this.Invoke("Merge", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        target,
                        from,
                        to,
                        options,
                        lockLevel,
                        optionsEx});
            failures = ((Failure[])(results[1]));
            conflicts = ((Conflict[])(results[2]));
            return ((GetOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void MergeAsync(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target, VersionSpec from, VersionSpec to, MergeOptions options, LockLevel lockLevel, int optionsEx) {
            this.MergeAsync(workspaceName, workspaceOwner, source, target, from, to, options, lockLevel, optionsEx, null);
        }
        
        /// <remarks/>
        public void MergeAsync(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target, VersionSpec from, VersionSpec to, MergeOptions options, LockLevel lockLevel, int optionsEx, object userState) {
            if ((this.MergeOperationCompleted == null)) {
                this.MergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeOperationCompleted);
            }
            this.InvokeAsync("Merge", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        target,
                        from,
                        to,
                        options,
                        lockLevel,
                        optionsEx}, this.MergeOperationCompleted, userState);
        }
        
        private void OnMergeOperationCompleted(object arg) {
            if ((this.MergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MergeCompleted(this, new MergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/PendChanges", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetOperation[] PendChanges(string workspaceName, string ownerName, ChangeRequest[] changes, int pendChangesOptions, int supportedFeatures, out Failure[] failures) {
            object[] results = this.Invoke("PendChanges", new object[] {
                        workspaceName,
                        ownerName,
                        changes,
                        pendChangesOptions,
                        supportedFeatures});
            failures = ((Failure[])(results[1]));
            return ((GetOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void PendChangesAsync(string workspaceName, string ownerName, ChangeRequest[] changes, int pendChangesOptions, int supportedFeatures) {
            this.PendChangesAsync(workspaceName, ownerName, changes, pendChangesOptions, supportedFeatures, null);
        }
        
        /// <remarks/>
        public void PendChangesAsync(string workspaceName, string ownerName, ChangeRequest[] changes, int pendChangesOptions, int supportedFeatures, object userState) {
            if ((this.PendChangesOperationCompleted == null)) {
                this.PendChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPendChangesOperationCompleted);
            }
            this.InvokeAsync("PendChanges", new object[] {
                        workspaceName,
                        ownerName,
                        changes,
                        pendChangesOptions,
                        supportedFeatures}, this.PendChangesOperationCompleted, userState);
        }
        
        private void OnPendChangesOperationCompleted(object arg) {
            if ((this.PendChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PendChangesCompleted(this, new PendChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryAnnotation", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Annotation[] QueryAnnotation(string annotationName, string annotatedItem, int version) {
            object[] results = this.Invoke("QueryAnnotation", new object[] {
                        annotationName,
                        annotatedItem,
                        version});
            return ((Annotation[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAnnotationAsync(string annotationName, string annotatedItem, int version) {
            this.QueryAnnotationAsync(annotationName, annotatedItem, version, null);
        }
        
        /// <remarks/>
        public void QueryAnnotationAsync(string annotationName, string annotatedItem, int version, object userState) {
            if ((this.QueryAnnotationOperationCompleted == null)) {
                this.QueryAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAnnotationOperationCompleted);
            }
            this.InvokeAsync("QueryAnnotation", new object[] {
                        annotationName,
                        annotatedItem,
                        version}, this.QueryAnnotationOperationCompleted, userState);
        }
        
        private void OnQueryAnnotationOperationCompleted(object arg) {
            if ((this.QueryAnnotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAnnotationCompleted(this, new QueryAnnotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryBranches", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBranchRelative")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public BranchRelative[][] QueryBranches(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version) {
            object[] results = this.Invoke("QueryBranches", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        version});
            return ((BranchRelative[][])(results[0]));
        }
        
        /// <remarks/>
        public void QueryBranchesAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version) {
            this.QueryBranchesAsync(workspaceName, workspaceOwner, items, version, null);
        }
        
        /// <remarks/>
        public void QueryBranchesAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version, object userState) {
            if ((this.QueryBranchesOperationCompleted == null)) {
                this.QueryBranchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBranchesOperationCompleted);
            }
            this.InvokeAsync("QueryBranches", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        version}, this.QueryBranchesOperationCompleted, userState);
        }
        
        private void OnQueryBranchesOperationCompleted(object arg) {
            if ((this.QueryBranchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBranchesCompleted(this, new QueryBranchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryChangeset", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Changeset QueryChangeset(int changesetId, bool includeChanges, bool generateDownloadUrls, bool includeSourceRenames) {
            object[] results = this.Invoke("QueryChangeset", new object[] {
                        changesetId,
                        includeChanges,
                        generateDownloadUrls,
                        includeSourceRenames});
            return ((Changeset)(results[0]));
        }
        
        /// <remarks/>
        public void QueryChangesetAsync(int changesetId, bool includeChanges, bool generateDownloadUrls, bool includeSourceRenames) {
            this.QueryChangesetAsync(changesetId, includeChanges, generateDownloadUrls, includeSourceRenames, null);
        }
        
        /// <remarks/>
        public void QueryChangesetAsync(int changesetId, bool includeChanges, bool generateDownloadUrls, bool includeSourceRenames, object userState) {
            if ((this.QueryChangesetOperationCompleted == null)) {
                this.QueryChangesetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryChangesetOperationCompleted);
            }
            this.InvokeAsync("QueryChangeset", new object[] {
                        changesetId,
                        includeChanges,
                        generateDownloadUrls,
                        includeSourceRenames}, this.QueryChangesetOperationCompleted, userState);
        }
        
        private void OnQueryChangesetOperationCompleted(object arg) {
            if ((this.QueryChangesetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryChangesetCompleted(this, new QueryChangesetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryChangesForChangeset", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Change[] QueryChangesForChangeset(int changesetId, bool generateDownloadUrls, int pageSize, ItemSpec lastItem) {
            object[] results = this.Invoke("QueryChangesForChangeset", new object[] {
                        changesetId,
                        generateDownloadUrls,
                        pageSize,
                        lastItem});
            return ((Change[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryChangesForChangesetAsync(int changesetId, bool generateDownloadUrls, int pageSize, ItemSpec lastItem) {
            this.QueryChangesForChangesetAsync(changesetId, generateDownloadUrls, pageSize, lastItem, null);
        }
        
        /// <remarks/>
        public void QueryChangesForChangesetAsync(int changesetId, bool generateDownloadUrls, int pageSize, ItemSpec lastItem, object userState) {
            if ((this.QueryChangesForChangesetOperationCompleted == null)) {
                this.QueryChangesForChangesetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryChangesForChangesetOperationCompleted);
            }
            this.InvokeAsync("QueryChangesForChangeset", new object[] {
                        changesetId,
                        generateDownloadUrls,
                        pageSize,
                        lastItem}, this.QueryChangesForChangesetOperationCompleted, userState);
        }
        
        private void OnQueryChangesForChangesetOperationCompleted(object arg) {
            if ((this.QueryChangesForChangesetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryChangesForChangesetCompleted(this, new QueryChangesForChangesetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryCheckinNoteDefinition", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckinNoteFieldDefinition[] QueryCheckinNoteDefinition(string[] associatedServerItem) {
            object[] results = this.Invoke("QueryCheckinNoteDefinition", new object[] {
                        associatedServerItem});
            return ((CheckinNoteFieldDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryCheckinNoteDefinitionAsync(string[] associatedServerItem) {
            this.QueryCheckinNoteDefinitionAsync(associatedServerItem, null);
        }
        
        /// <remarks/>
        public void QueryCheckinNoteDefinitionAsync(string[] associatedServerItem, object userState) {
            if ((this.QueryCheckinNoteDefinitionOperationCompleted == null)) {
                this.QueryCheckinNoteDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCheckinNoteDefinitionOperationCompleted);
            }
            this.InvokeAsync("QueryCheckinNoteDefinition", new object[] {
                        associatedServerItem}, this.QueryCheckinNoteDefinitionOperationCompleted, userState);
        }
        
        private void OnQueryCheckinNoteDefinitionOperationCompleted(object arg) {
            if ((this.QueryCheckinNoteDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCheckinNoteDefinitionCompleted(this, new QueryCheckinNoteDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryCheckinNoteFieldNames", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryCheckinNoteFieldNames() {
            object[] results = this.Invoke("QueryCheckinNoteFieldNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryCheckinNoteFieldNamesAsync() {
            this.QueryCheckinNoteFieldNamesAsync(null);
        }
        
        /// <remarks/>
        public void QueryCheckinNoteFieldNamesAsync(object userState) {
            if ((this.QueryCheckinNoteFieldNamesOperationCompleted == null)) {
                this.QueryCheckinNoteFieldNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCheckinNoteFieldNamesOperationCompleted);
            }
            this.InvokeAsync("QueryCheckinNoteFieldNames", new object[0], this.QueryCheckinNoteFieldNamesOperationCompleted, userState);
        }
        
        private void OnQueryCheckinNoteFieldNamesOperationCompleted(object arg) {
            if ((this.QueryCheckinNoteFieldNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCheckinNoteFieldNamesCompleted(this, new QueryCheckinNoteFieldNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryConflicts", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conflict[] QueryConflicts(string workspaceName, string ownerName, ItemSpec[] items) {
            object[] results = this.Invoke("QueryConflicts", new object[] {
                        workspaceName,
                        ownerName,
                        items});
            return ((Conflict[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryConflictsAsync(string workspaceName, string ownerName, ItemSpec[] items) {
            this.QueryConflictsAsync(workspaceName, ownerName, items, null);
        }
        
        /// <remarks/>
        public void QueryConflictsAsync(string workspaceName, string ownerName, ItemSpec[] items, object userState) {
            if ((this.QueryConflictsOperationCompleted == null)) {
                this.QueryConflictsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryConflictsOperationCompleted);
            }
            this.InvokeAsync("QueryConflicts", new object[] {
                        workspaceName,
                        ownerName,
                        items}, this.QueryConflictsOperationCompleted, userState);
        }
        
        private void OnQueryConflictsOperationCompleted(object arg) {
            if ((this.QueryConflictsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryConflictsCompleted(this, new QueryConflictsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryEffectiveGlobalPermissions", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryEffectiveGlobalPermissions(string identityName) {
            object[] results = this.Invoke("QueryEffectiveGlobalPermissions", new object[] {
                        identityName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryEffectiveGlobalPermissionsAsync(string identityName) {
            this.QueryEffectiveGlobalPermissionsAsync(identityName, null);
        }
        
        /// <remarks/>
        public void QueryEffectiveGlobalPermissionsAsync(string identityName, object userState) {
            if ((this.QueryEffectiveGlobalPermissionsOperationCompleted == null)) {
                this.QueryEffectiveGlobalPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryEffectiveGlobalPermissionsOperationCompleted);
            }
            this.InvokeAsync("QueryEffectiveGlobalPermissions", new object[] {
                        identityName}, this.QueryEffectiveGlobalPermissionsOperationCompleted, userState);
        }
        
        private void OnQueryEffectiveGlobalPermissionsOperationCompleted(object arg) {
            if ((this.QueryEffectiveGlobalPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryEffectiveGlobalPermissionsCompleted(this, new QueryEffectiveGlobalPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryEffectiveItemPermissions", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryEffectiveItemPermissions(string workspaceName, string workspaceOwner, string item, string identityName) {
            object[] results = this.Invoke("QueryEffectiveItemPermissions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        item,
                        identityName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryEffectiveItemPermissionsAsync(string workspaceName, string workspaceOwner, string item, string identityName) {
            this.QueryEffectiveItemPermissionsAsync(workspaceName, workspaceOwner, item, identityName, null);
        }
        
        /// <remarks/>
        public void QueryEffectiveItemPermissionsAsync(string workspaceName, string workspaceOwner, string item, string identityName, object userState) {
            if ((this.QueryEffectiveItemPermissionsOperationCompleted == null)) {
                this.QueryEffectiveItemPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryEffectiveItemPermissionsOperationCompleted);
            }
            this.InvokeAsync("QueryEffectiveItemPermissions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        item,
                        identityName}, this.QueryEffectiveItemPermissionsOperationCompleted, userState);
        }
        
        private void OnQueryEffectiveItemPermissionsOperationCompleted(object arg) {
            if ((this.QueryEffectiveItemPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryEffectiveItemPermissionsCompleted(this, new QueryEffectiveItemPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryFileTypes", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileType[] QueryFileTypes() {
            object[] results = this.Invoke("QueryFileTypes", new object[0]);
            return ((FileType[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryFileTypesAsync() {
            this.QueryFileTypesAsync(null);
        }
        
        /// <remarks/>
        public void QueryFileTypesAsync(object userState) {
            if ((this.QueryFileTypesOperationCompleted == null)) {
                this.QueryFileTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFileTypesOperationCompleted);
            }
            this.InvokeAsync("QueryFileTypes", new object[0], this.QueryFileTypesOperationCompleted, userState);
        }
        
        private void OnQueryFileTypesOperationCompleted(object arg) {
            if ((this.QueryFileTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFileTypesCompleted(this, new QueryFileTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryGlobalPermissions", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalSecurity QueryGlobalPermissions(string[] identityNames) {
            object[] results = this.Invoke("QueryGlobalPermissions", new object[] {
                        identityNames});
            return ((GlobalSecurity)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGlobalPermissionsAsync(string[] identityNames) {
            this.QueryGlobalPermissionsAsync(identityNames, null);
        }
        
        /// <remarks/>
        public void QueryGlobalPermissionsAsync(string[] identityNames, object userState) {
            if ((this.QueryGlobalPermissionsOperationCompleted == null)) {
                this.QueryGlobalPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGlobalPermissionsOperationCompleted);
            }
            this.InvokeAsync("QueryGlobalPermissions", new object[] {
                        identityNames}, this.QueryGlobalPermissionsOperationCompleted, userState);
        }
        
        private void OnQueryGlobalPermissionsOperationCompleted(object arg) {
            if ((this.QueryGlobalPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGlobalPermissionsCompleted(this, new QueryGlobalPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryHistory", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Changeset[] QueryHistory(string workspaceName, string workspaceOwner, ItemSpec itemSpec, VersionSpec versionItem, string user, VersionSpec versionFrom, VersionSpec versionTo, int maxCount, bool includeFiles, bool generateDownloadUrls, bool slotMode, bool sortAscending) {
            object[] results = this.Invoke("QueryHistory", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpec,
                        versionItem,
                        user,
                        versionFrom,
                        versionTo,
                        maxCount,
                        includeFiles,
                        generateDownloadUrls,
                        slotMode,
                        sortAscending});
            return ((Changeset[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryHistoryAsync(string workspaceName, string workspaceOwner, ItemSpec itemSpec, VersionSpec versionItem, string user, VersionSpec versionFrom, VersionSpec versionTo, int maxCount, bool includeFiles, bool generateDownloadUrls, bool slotMode, bool sortAscending) {
            this.QueryHistoryAsync(workspaceName, workspaceOwner, itemSpec, versionItem, user, versionFrom, versionTo, maxCount, includeFiles, generateDownloadUrls, slotMode, sortAscending, null);
        }
        
        /// <remarks/>
        public void QueryHistoryAsync(string workspaceName, string workspaceOwner, ItemSpec itemSpec, VersionSpec versionItem, string user, VersionSpec versionFrom, VersionSpec versionTo, int maxCount, bool includeFiles, bool generateDownloadUrls, bool slotMode, bool sortAscending, object userState) {
            if ((this.QueryHistoryOperationCompleted == null)) {
                this.QueryHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryHistoryOperationCompleted);
            }
            this.InvokeAsync("QueryHistory", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpec,
                        versionItem,
                        user,
                        versionFrom,
                        versionTo,
                        maxCount,
                        includeFiles,
                        generateDownloadUrls,
                        slotMode,
                        sortAscending}, this.QueryHistoryOperationCompleted, userState);
        }
        
        private void OnQueryHistoryOperationCompleted(object arg) {
            if ((this.QueryHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryHistoryCompleted(this, new QueryHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryItems", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ItemSet[] QueryItems(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version, DeletedState deletedState, ItemType itemType, bool generateDownloadUrls, int options) {
            object[] results = this.Invoke("QueryItems", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        version,
                        deletedState,
                        itemType,
                        generateDownloadUrls,
                        options});
            return ((ItemSet[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryItemsAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version, DeletedState deletedState, ItemType itemType, bool generateDownloadUrls, int options) {
            this.QueryItemsAsync(workspaceName, workspaceOwner, items, version, deletedState, itemType, generateDownloadUrls, options, null);
        }
        
        /// <remarks/>
        public void QueryItemsAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, VersionSpec version, DeletedState deletedState, ItemType itemType, bool generateDownloadUrls, int options, object userState) {
            if ((this.QueryItemsOperationCompleted == null)) {
                this.QueryItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryItemsOperationCompleted);
            }
            this.InvokeAsync("QueryItems", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        version,
                        deletedState,
                        itemType,
                        generateDownloadUrls,
                        options}, this.QueryItemsOperationCompleted, userState);
        }
        
        private void OnQueryItemsOperationCompleted(object arg) {
            if ((this.QueryItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryItemsCompleted(this, new QueryItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryLocalVersions", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfLocalVersion")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public LocalVersion[][] QueryLocalVersions(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs) {
            object[] results = this.Invoke("QueryLocalVersions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs});
            return ((LocalVersion[][])(results[0]));
        }
        
        /// <remarks/>
        public void QueryLocalVersionsAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs) {
            this.QueryLocalVersionsAsync(workspaceName, workspaceOwner, itemSpecs, null);
        }
        
        /// <remarks/>
        public void QueryLocalVersionsAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, object userState) {
            if ((this.QueryLocalVersionsOperationCompleted == null)) {
                this.QueryLocalVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLocalVersionsOperationCompleted);
            }
            this.InvokeAsync("QueryLocalVersions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs}, this.QueryLocalVersionsOperationCompleted, userState);
        }
        
        private void OnQueryLocalVersionsOperationCompleted(object arg) {
            if ((this.QueryLocalVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLocalVersionsCompleted(this, new QueryLocalVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryItemsExtended", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfExtendedItem")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public ExtendedItem[][] QueryItemsExtended(string workspaceName, string workspaceOwner, ItemSpec[] items, DeletedState deletedState, ItemType itemType, int options) {
            object[] results = this.Invoke("QueryItemsExtended", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        deletedState,
                        itemType,
                        options});
            return ((ExtendedItem[][])(results[0]));
        }
        
        /// <remarks/>
        public void QueryItemsExtendedAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, DeletedState deletedState, ItemType itemType, int options) {
            this.QueryItemsExtendedAsync(workspaceName, workspaceOwner, items, deletedState, itemType, options, null);
        }
        
        /// <remarks/>
        public void QueryItemsExtendedAsync(string workspaceName, string workspaceOwner, ItemSpec[] items, DeletedState deletedState, ItemType itemType, int options, object userState) {
            if ((this.QueryItemsExtendedOperationCompleted == null)) {
                this.QueryItemsExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryItemsExtendedOperationCompleted);
            }
            this.InvokeAsync("QueryItemsExtended", new object[] {
                        workspaceName,
                        workspaceOwner,
                        items,
                        deletedState,
                        itemType,
                        options}, this.QueryItemsExtendedOperationCompleted, userState);
        }
        
        private void OnQueryItemsExtendedOperationCompleted(object arg) {
            if ((this.QueryItemsExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryItemsExtendedCompleted(this, new QueryItemsExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryItemPermissions", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ItemSecurity[] QueryItemPermissions(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, string[] identityNames, out Failure[] failures) {
            object[] results = this.Invoke("QueryItemPermissions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs,
                        identityNames});
            failures = ((Failure[])(results[1]));
            return ((ItemSecurity[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryItemPermissionsAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, string[] identityNames) {
            this.QueryItemPermissionsAsync(workspaceName, workspaceOwner, itemSpecs, identityNames, null);
        }
        
        /// <remarks/>
        public void QueryItemPermissionsAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, string[] identityNames, object userState) {
            if ((this.QueryItemPermissionsOperationCompleted == null)) {
                this.QueryItemPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryItemPermissionsOperationCompleted);
            }
            this.InvokeAsync("QueryItemPermissions", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs,
                        identityNames}, this.QueryItemPermissionsOperationCompleted, userState);
        }
        
        private void OnQueryItemPermissionsOperationCompleted(object arg) {
            if ((this.QueryItemPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryItemPermissionsCompleted(this, new QueryItemPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryLabels", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionControlLabel[] QueryLabels(string workspaceName, string workspaceOwner, string labelName, string labelScope, string owner, string filterItem, VersionSpec versionFilterItem, bool includeItems, bool generateDownloadUrls) {
            object[] results = this.Invoke("QueryLabels", new object[] {
                        workspaceName,
                        workspaceOwner,
                        labelName,
                        labelScope,
                        owner,
                        filterItem,
                        versionFilterItem,
                        includeItems,
                        generateDownloadUrls});
            return ((VersionControlLabel[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryLabelsAsync(string workspaceName, string workspaceOwner, string labelName, string labelScope, string owner, string filterItem, VersionSpec versionFilterItem, bool includeItems, bool generateDownloadUrls) {
            this.QueryLabelsAsync(workspaceName, workspaceOwner, labelName, labelScope, owner, filterItem, versionFilterItem, includeItems, generateDownloadUrls, null);
        }
        
        /// <remarks/>
        public void QueryLabelsAsync(string workspaceName, string workspaceOwner, string labelName, string labelScope, string owner, string filterItem, VersionSpec versionFilterItem, bool includeItems, bool generateDownloadUrls, object userState) {
            if ((this.QueryLabelsOperationCompleted == null)) {
                this.QueryLabelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLabelsOperationCompleted);
            }
            this.InvokeAsync("QueryLabels", new object[] {
                        workspaceName,
                        workspaceOwner,
                        labelName,
                        labelScope,
                        owner,
                        filterItem,
                        versionFilterItem,
                        includeItems,
                        generateDownloadUrls}, this.QueryLabelsOperationCompleted, userState);
        }
        
        private void OnQueryLabelsOperationCompleted(object arg) {
            if ((this.QueryLabelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLabelsCompleted(this, new QueryLabelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryMergeCandidates", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MergeCandidate[] QueryMergeCandidates(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target) {
            object[] results = this.Invoke("QueryMergeCandidates", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        target});
            return ((MergeCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryMergeCandidatesAsync(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target) {
            this.QueryMergeCandidatesAsync(workspaceName, workspaceOwner, source, target, null);
        }
        
        /// <remarks/>
        public void QueryMergeCandidatesAsync(string workspaceName, string workspaceOwner, ItemSpec source, ItemSpec target, object userState) {
            if ((this.QueryMergeCandidatesOperationCompleted == null)) {
                this.QueryMergeCandidatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMergeCandidatesOperationCompleted);
            }
            this.InvokeAsync("QueryMergeCandidates", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        target}, this.QueryMergeCandidatesOperationCompleted, userState);
        }
        
        private void OnQueryMergeCandidatesOperationCompleted(object arg) {
            if ((this.QueryMergeCandidatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMergeCandidatesCompleted(this, new QueryMergeCandidatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryMerges", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangesetMerge[] QueryMerges(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll, out Changeset[] changesets) {
            object[] results = this.Invoke("QueryMerges", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        versionSource,
                        target,
                        versionTarget,
                        versionFrom,
                        versionTo,
                        maxChangesets,
                        showAll});
            changesets = ((Changeset[])(results[1]));
            return ((ChangesetMerge[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryMergesAsync(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll) {
            this.QueryMergesAsync(workspaceName, workspaceOwner, source, versionSource, target, versionTarget, versionFrom, versionTo, maxChangesets, showAll, null);
        }
        
        /// <remarks/>
        public void QueryMergesAsync(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll, object userState) {
            if ((this.QueryMergesOperationCompleted == null)) {
                this.QueryMergesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMergesOperationCompleted);
            }
            this.InvokeAsync("QueryMerges", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        versionSource,
                        target,
                        versionTarget,
                        versionFrom,
                        versionTo,
                        maxChangesets,
                        showAll}, this.QueryMergesOperationCompleted, userState);
        }
        
        private void OnQueryMergesOperationCompleted(object arg) {
            if ((this.QueryMergesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMergesCompleted(this, new QueryMergesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryMergesWithDetails", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangesetMergeDetails QueryMergesWithDetails(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll) {
            object[] results = this.Invoke("QueryMergesWithDetails", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        versionSource,
                        target,
                        versionTarget,
                        versionFrom,
                        versionTo,
                        maxChangesets,
                        showAll});
            return ((ChangesetMergeDetails)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMergesWithDetailsAsync(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll) {
            this.QueryMergesWithDetailsAsync(workspaceName, workspaceOwner, source, versionSource, target, versionTarget, versionFrom, versionTo, maxChangesets, showAll, null);
        }
        
        /// <remarks/>
        public void QueryMergesWithDetailsAsync(string workspaceName, string workspaceOwner, ItemSpec source, VersionSpec versionSource, ItemSpec target, VersionSpec versionTarget, VersionSpec versionFrom, VersionSpec versionTo, int maxChangesets, bool showAll, object userState) {
            if ((this.QueryMergesWithDetailsOperationCompleted == null)) {
                this.QueryMergesWithDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMergesWithDetailsOperationCompleted);
            }
            this.InvokeAsync("QueryMergesWithDetails", new object[] {
                        workspaceName,
                        workspaceOwner,
                        source,
                        versionSource,
                        target,
                        versionTarget,
                        versionFrom,
                        versionTo,
                        maxChangesets,
                        showAll}, this.QueryMergesWithDetailsOperationCompleted, userState);
        }
        
        private void OnQueryMergesWithDetailsOperationCompleted(object arg) {
            if ((this.QueryMergesWithDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMergesWithDetailsCompleted(this, new QueryMergesWithDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryPendingSets", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PendingSet[] QueryPendingSets(string localWorkspaceName, string localWorkspaceOwner, string queryWorkspaceName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls, out Failure[] failures) {
            object[] results = this.Invoke("QueryPendingSets", new object[] {
                        localWorkspaceName,
                        localWorkspaceOwner,
                        queryWorkspaceName,
                        ownerName,
                        itemSpecs,
                        generateDownloadUrls});
            failures = ((Failure[])(results[1]));
            return ((PendingSet[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPendingSetsAsync(string localWorkspaceName, string localWorkspaceOwner, string queryWorkspaceName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls) {
            this.QueryPendingSetsAsync(localWorkspaceName, localWorkspaceOwner, queryWorkspaceName, ownerName, itemSpecs, generateDownloadUrls, null);
        }
        
        /// <remarks/>
        public void QueryPendingSetsAsync(string localWorkspaceName, string localWorkspaceOwner, string queryWorkspaceName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls, object userState) {
            if ((this.QueryPendingSetsOperationCompleted == null)) {
                this.QueryPendingSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPendingSetsOperationCompleted);
            }
            this.InvokeAsync("QueryPendingSets", new object[] {
                        localWorkspaceName,
                        localWorkspaceOwner,
                        queryWorkspaceName,
                        ownerName,
                        itemSpecs,
                        generateDownloadUrls}, this.QueryPendingSetsOperationCompleted, userState);
        }
        
        private void OnQueryPendingSetsOperationCompleted(object arg) {
            if ((this.QueryPendingSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPendingSetsCompleted(this, new QueryPendingSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryPendingChangesForWorkspace", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PendingChange[] QueryPendingChangesForWorkspace(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, bool generateDownloadUrls, int pageSize, string lastChange, out Failure[] failures) {
            object[] results = this.Invoke("QueryPendingChangesForWorkspace", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs,
                        generateDownloadUrls,
                        pageSize,
                        lastChange});
            failures = ((Failure[])(results[1]));
            return ((PendingChange[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPendingChangesForWorkspaceAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, bool generateDownloadUrls, int pageSize, string lastChange) {
            this.QueryPendingChangesForWorkspaceAsync(workspaceName, workspaceOwner, itemSpecs, generateDownloadUrls, pageSize, lastChange, null);
        }
        
        /// <remarks/>
        public void QueryPendingChangesForWorkspaceAsync(string workspaceName, string workspaceOwner, ItemSpec[] itemSpecs, bool generateDownloadUrls, int pageSize, string lastChange, object userState) {
            if ((this.QueryPendingChangesForWorkspaceOperationCompleted == null)) {
                this.QueryPendingChangesForWorkspaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPendingChangesForWorkspaceOperationCompleted);
            }
            this.InvokeAsync("QueryPendingChangesForWorkspace", new object[] {
                        workspaceName,
                        workspaceOwner,
                        itemSpecs,
                        generateDownloadUrls,
                        pageSize,
                        lastChange}, this.QueryPendingChangesForWorkspaceOperationCompleted, userState);
        }
        
        private void OnQueryPendingChangesForWorkspaceOperationCompleted(object arg) {
            if ((this.QueryPendingChangesForWorkspaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPendingChangesForWorkspaceCompleted(this, new QueryPendingChangesForWorkspaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryShelvedChanges", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PendingSet[] QueryShelvedChanges(string localWorkspaceName, string localWorkspaceOwner, string shelvesetName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls, out Failure[] failures) {
            object[] results = this.Invoke("QueryShelvedChanges", new object[] {
                        localWorkspaceName,
                        localWorkspaceOwner,
                        shelvesetName,
                        ownerName,
                        itemSpecs,
                        generateDownloadUrls});
            failures = ((Failure[])(results[1]));
            return ((PendingSet[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryShelvedChangesAsync(string localWorkspaceName, string localWorkspaceOwner, string shelvesetName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls) {
            this.QueryShelvedChangesAsync(localWorkspaceName, localWorkspaceOwner, shelvesetName, ownerName, itemSpecs, generateDownloadUrls, null);
        }
        
        /// <remarks/>
        public void QueryShelvedChangesAsync(string localWorkspaceName, string localWorkspaceOwner, string shelvesetName, string ownerName, ItemSpec[] itemSpecs, bool generateDownloadUrls, object userState) {
            if ((this.QueryShelvedChangesOperationCompleted == null)) {
                this.QueryShelvedChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryShelvedChangesOperationCompleted);
            }
            this.InvokeAsync("QueryShelvedChanges", new object[] {
                        localWorkspaceName,
                        localWorkspaceOwner,
                        shelvesetName,
                        ownerName,
                        itemSpecs,
                        generateDownloadUrls}, this.QueryShelvedChangesOperationCompleted, userState);
        }
        
        private void OnQueryShelvedChangesOperationCompleted(object arg) {
            if ((this.QueryShelvedChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryShelvedChangesCompleted(this, new QueryShelvedChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryShelvesets", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shelveset[] QueryShelvesets(string shelvesetName, string ownerName) {
            object[] results = this.Invoke("QueryShelvesets", new object[] {
                        shelvesetName,
                        ownerName});
            return ((Shelveset[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryShelvesetsAsync(string shelvesetName, string ownerName) {
            this.QueryShelvesetsAsync(shelvesetName, ownerName, null);
        }
        
        /// <remarks/>
        public void QueryShelvesetsAsync(string shelvesetName, string ownerName, object userState) {
            if ((this.QueryShelvesetsOperationCompleted == null)) {
                this.QueryShelvesetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryShelvesetsOperationCompleted);
            }
            this.InvokeAsync("QueryShelvesets", new object[] {
                        shelvesetName,
                        ownerName}, this.QueryShelvesetsOperationCompleted, userState);
        }
        
        private void OnQueryShelvesetsOperationCompleted(object arg) {
            if ((this.QueryShelvesetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryShelvesetsCompleted(this, new QueryShelvesetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryWorkspace", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Workspace QueryWorkspace(string workspaceName, string ownerName) {
            object[] results = this.Invoke("QueryWorkspace", new object[] {
                        workspaceName,
                        ownerName});
            return ((Workspace)(results[0]));
        }
        
        /// <remarks/>
        public void QueryWorkspaceAsync(string workspaceName, string ownerName) {
            this.QueryWorkspaceAsync(workspaceName, ownerName, null);
        }
        
        /// <remarks/>
        public void QueryWorkspaceAsync(string workspaceName, string ownerName, object userState) {
            if ((this.QueryWorkspaceOperationCompleted == null)) {
                this.QueryWorkspaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryWorkspaceOperationCompleted);
            }
            this.InvokeAsync("QueryWorkspace", new object[] {
                        workspaceName,
                        ownerName}, this.QueryWorkspaceOperationCompleted, userState);
        }
        
        private void OnQueryWorkspaceOperationCompleted(object arg) {
            if ((this.QueryWorkspaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryWorkspaceCompleted(this, new QueryWorkspaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryWorkspaces", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Workspace[] QueryWorkspaces(string ownerName, string computer, int permissionsFilter) {
            object[] results = this.Invoke("QueryWorkspaces", new object[] {
                        ownerName,
                        computer,
                        permissionsFilter});
            return ((Workspace[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryWorkspacesAsync(string ownerName, string computer, int permissionsFilter) {
            this.QueryWorkspacesAsync(ownerName, computer, permissionsFilter, null);
        }
        
        /// <remarks/>
        public void QueryWorkspacesAsync(string ownerName, string computer, int permissionsFilter, object userState) {
            if ((this.QueryWorkspacesOperationCompleted == null)) {
                this.QueryWorkspacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryWorkspacesOperationCompleted);
            }
            this.InvokeAsync("QueryWorkspaces", new object[] {
                        ownerName,
                        computer,
                        permissionsFilter}, this.QueryWorkspacesOperationCompleted, userState);
        }
        
        private void OnQueryWorkspacesOperationCompleted(object arg) {
            if ((this.QueryWorkspacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryWorkspacesCompleted(this, new QueryWorkspacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/RefreshIdentityDisplayName", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshIdentityDisplayName() {
            this.Invoke("RefreshIdentityDisplayName", new object[0]);
        }
        
        /// <remarks/>
        public void RefreshIdentityDisplayNameAsync() {
            this.RefreshIdentityDisplayNameAsync(null);
        }
        
        /// <remarks/>
        public void RefreshIdentityDisplayNameAsync(object userState) {
            if ((this.RefreshIdentityDisplayNameOperationCompleted == null)) {
                this.RefreshIdentityDisplayNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshIdentityDisplayNameOperationCompleted);
            }
            this.InvokeAsync("RefreshIdentityDisplayName", new object[0], this.RefreshIdentityDisplayNameOperationCompleted, userState);
        }
        
        private void OnRefreshIdentityDisplayNameOperationCompleted(object arg) {
            if ((this.RefreshIdentityDisplayNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshIdentityDisplayNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/RemoveLocalConflict", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveLocalConflict(string workspaceName, string ownerName, int conflictId) {
            this.Invoke("RemoveLocalConflict", new object[] {
                        workspaceName,
                        ownerName,
                        conflictId});
        }
        
        /// <remarks/>
        public void RemoveLocalConflictAsync(string workspaceName, string ownerName, int conflictId) {
            this.RemoveLocalConflictAsync(workspaceName, ownerName, conflictId, null);
        }
        
        /// <remarks/>
        public void RemoveLocalConflictAsync(string workspaceName, string ownerName, int conflictId, object userState) {
            if ((this.RemoveLocalConflictOperationCompleted == null)) {
                this.RemoveLocalConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLocalConflictOperationCompleted);
            }
            this.InvokeAsync("RemoveLocalConflict", new object[] {
                        workspaceName,
                        ownerName,
                        conflictId}, this.RemoveLocalConflictOperationCompleted, userState);
        }
        
        private void OnRemoveLocalConflictOperationCompleted(object arg) {
            if ((this.RemoveLocalConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLocalConflictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Resolve", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetOperation[] Resolve(string workspaceName, string ownerName, int conflictId, Resolution resolution, string newPath, int encoding, LockLevel lockLevel, out GetOperation[] undoOperations, out Conflict[] resolvedConflicts) {
            object[] results = this.Invoke("Resolve", new object[] {
                        workspaceName,
                        ownerName,
                        conflictId,
                        resolution,
                        newPath,
                        encoding,
                        lockLevel});
            undoOperations = ((GetOperation[])(results[1]));
            resolvedConflicts = ((Conflict[])(results[2]));
            return ((GetOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void ResolveAsync(string workspaceName, string ownerName, int conflictId, Resolution resolution, string newPath, int encoding, LockLevel lockLevel) {
            this.ResolveAsync(workspaceName, ownerName, conflictId, resolution, newPath, encoding, lockLevel, null);
        }
        
        /// <remarks/>
        public void ResolveAsync(string workspaceName, string ownerName, int conflictId, Resolution resolution, string newPath, int encoding, LockLevel lockLevel, object userState) {
            if ((this.ResolveOperationCompleted == null)) {
                this.ResolveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveOperationCompleted);
            }
            this.InvokeAsync("Resolve", new object[] {
                        workspaceName,
                        ownerName,
                        conflictId,
                        resolution,
                        newPath,
                        encoding,
                        lockLevel}, this.ResolveOperationCompleted, userState);
        }
        
        private void OnResolveOperationCompleted(object arg) {
            if ((this.ResolveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveCompleted(this, new ResolveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/SetFileTypes", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetFileTypes(FileType[] fileTypes) {
            this.Invoke("SetFileTypes", new object[] {
                        fileTypes});
        }
        
        /// <remarks/>
        public void SetFileTypesAsync(FileType[] fileTypes) {
            this.SetFileTypesAsync(fileTypes, null);
        }
        
        /// <remarks/>
        public void SetFileTypesAsync(FileType[] fileTypes, object userState) {
            if ((this.SetFileTypesOperationCompleted == null)) {
                this.SetFileTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFileTypesOperationCompleted);
            }
            this.InvokeAsync("SetFileTypes", new object[] {
                        fileTypes}, this.SetFileTypesOperationCompleted, userState);
        }
        
        private void OnSetFileTypesOperationCompleted(object arg) {
            if ((this.SetFileTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFileTypesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Shelve", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Failure[] Shelve(string workspaceName, string workspaceOwner, string[] serverItems, Shelveset shelveset, bool replace) {
            object[] results = this.Invoke("Shelve", new object[] {
                        workspaceName,
                        workspaceOwner,
                        serverItems,
                        shelveset,
                        replace});
            return ((Failure[])(results[0]));
        }
        
        /// <remarks/>
        public void ShelveAsync(string workspaceName, string workspaceOwner, string[] serverItems, Shelveset shelveset, bool replace) {
            this.ShelveAsync(workspaceName, workspaceOwner, serverItems, shelveset, replace, null);
        }
        
        /// <remarks/>
        public void ShelveAsync(string workspaceName, string workspaceOwner, string[] serverItems, Shelveset shelveset, bool replace, object userState) {
            if ((this.ShelveOperationCompleted == null)) {
                this.ShelveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShelveOperationCompleted);
            }
            this.InvokeAsync("Shelve", new object[] {
                        workspaceName,
                        workspaceOwner,
                        serverItems,
                        shelveset,
                        replace}, this.ShelveOperationCompleted, userState);
        }
        
        private void OnShelveOperationCompleted(object arg) {
            if ((this.ShelveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShelveCompleted(this, new ShelveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UndoPendingChanges", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetOperation[] UndoPendingChanges(string workspaceName, string ownerName, ItemSpec[] items, out Failure[] failures) {
            object[] results = this.Invoke("UndoPendingChanges", new object[] {
                        workspaceName,
                        ownerName,
                        items});
            failures = ((Failure[])(results[1]));
            return ((GetOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void UndoPendingChangesAsync(string workspaceName, string ownerName, ItemSpec[] items) {
            this.UndoPendingChangesAsync(workspaceName, ownerName, items, null);
        }
        
        /// <remarks/>
        public void UndoPendingChangesAsync(string workspaceName, string ownerName, ItemSpec[] items, object userState) {
            if ((this.UndoPendingChangesOperationCompleted == null)) {
                this.UndoPendingChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUndoPendingChangesOperationCompleted);
            }
            this.InvokeAsync("UndoPendingChanges", new object[] {
                        workspaceName,
                        ownerName,
                        items}, this.UndoPendingChangesOperationCompleted, userState);
        }
        
        private void OnUndoPendingChangesOperationCompleted(object arg) {
            if ((this.UndoPendingChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UndoPendingChangesCompleted(this, new UndoPendingChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UnlabelItem", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LabelResult[] UnlabelItem(string workspaceName, string workspaceOwner, string labelName, string labelScope, ItemSpec[] items, VersionSpec version, out Failure[] failures) {
            object[] results = this.Invoke("UnlabelItem", new object[] {
                        workspaceName,
                        workspaceOwner,
                        labelName,
                        labelScope,
                        items,
                        version});
            failures = ((Failure[])(results[1]));
            return ((LabelResult[])(results[0]));
        }
        
        /// <remarks/>
        public void UnlabelItemAsync(string workspaceName, string workspaceOwner, string labelName, string labelScope, ItemSpec[] items, VersionSpec version) {
            this.UnlabelItemAsync(workspaceName, workspaceOwner, labelName, labelScope, items, version, null);
        }
        
        /// <remarks/>
        public void UnlabelItemAsync(string workspaceName, string workspaceOwner, string labelName, string labelScope, ItemSpec[] items, VersionSpec version, object userState) {
            if ((this.UnlabelItemOperationCompleted == null)) {
                this.UnlabelItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlabelItemOperationCompleted);
            }
            this.InvokeAsync("UnlabelItem", new object[] {
                        workspaceName,
                        workspaceOwner,
                        labelName,
                        labelScope,
                        items,
                        version}, this.UnlabelItemOperationCompleted, userState);
        }
        
        private void OnUnlabelItemOperationCompleted(object arg) {
            if ((this.UnlabelItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlabelItemCompleted(this, new UnlabelItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/Unshelve", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shelveset Unshelve(string shelvesetName, string shelvesetOwner, string workspaceName, string workspaceOwner, ItemSpec[] items, out Failure[] failures, out GetOperation[] getOperations) {
            object[] results = this.Invoke("Unshelve", new object[] {
                        shelvesetName,
                        shelvesetOwner,
                        workspaceName,
                        workspaceOwner,
                        items});
            failures = ((Failure[])(results[1]));
            getOperations = ((GetOperation[])(results[2]));
            return ((Shelveset)(results[0]));
        }
        
        /// <remarks/>
        public void UnshelveAsync(string shelvesetName, string shelvesetOwner, string workspaceName, string workspaceOwner, ItemSpec[] items) {
            this.UnshelveAsync(shelvesetName, shelvesetOwner, workspaceName, workspaceOwner, items, null);
        }
        
        /// <remarks/>
        public void UnshelveAsync(string shelvesetName, string shelvesetOwner, string workspaceName, string workspaceOwner, ItemSpec[] items, object userState) {
            if ((this.UnshelveOperationCompleted == null)) {
                this.UnshelveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnshelveOperationCompleted);
            }
            this.InvokeAsync("Unshelve", new object[] {
                        shelvesetName,
                        shelvesetOwner,
                        workspaceName,
                        workspaceOwner,
                        items}, this.UnshelveOperationCompleted, userState);
        }
        
        private void OnUnshelveOperationCompleted(object arg) {
            if ((this.UnshelveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnshelveCompleted(this, new UnshelveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateChangeset", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateChangeset(int changeset, string comment, CheckinNote checkinNote) {
            this.Invoke("UpdateChangeset", new object[] {
                        changeset,
                        comment,
                        checkinNote});
        }
        
        /// <remarks/>
        public void UpdateChangesetAsync(int changeset, string comment, CheckinNote checkinNote) {
            this.UpdateChangesetAsync(changeset, comment, checkinNote, null);
        }
        
        /// <remarks/>
        public void UpdateChangesetAsync(int changeset, string comment, CheckinNote checkinNote, object userState) {
            if ((this.UpdateChangesetOperationCompleted == null)) {
                this.UpdateChangesetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChangesetOperationCompleted);
            }
            this.InvokeAsync("UpdateChangeset", new object[] {
                        changeset,
                        comment,
                        checkinNote}, this.UpdateChangesetOperationCompleted, userState);
        }
        
        private void OnUpdateChangesetOperationCompleted(object arg) {
            if ((this.UpdateChangesetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChangesetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateCheckinNoteFieldName", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCheckinNoteFieldName(string path, string existingFieldName, string newFieldName) {
            this.Invoke("UpdateCheckinNoteFieldName", new object[] {
                        path,
                        existingFieldName,
                        newFieldName});
        }
        
        /// <remarks/>
        public void UpdateCheckinNoteFieldNameAsync(string path, string existingFieldName, string newFieldName) {
            this.UpdateCheckinNoteFieldNameAsync(path, existingFieldName, newFieldName, null);
        }
        
        /// <remarks/>
        public void UpdateCheckinNoteFieldNameAsync(string path, string existingFieldName, string newFieldName, object userState) {
            if ((this.UpdateCheckinNoteFieldNameOperationCompleted == null)) {
                this.UpdateCheckinNoteFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCheckinNoteFieldNameOperationCompleted);
            }
            this.InvokeAsync("UpdateCheckinNoteFieldName", new object[] {
                        path,
                        existingFieldName,
                        newFieldName}, this.UpdateCheckinNoteFieldNameOperationCompleted, userState);
        }
        
        private void OnUpdateCheckinNoteFieldNameOperationCompleted(object arg) {
            if ((this.UpdateCheckinNoteFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCheckinNoteFieldNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateGlobalSecurity", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionChange[] UpdateGlobalSecurity(PermissionChange[] changes, out Failure[] failures) {
            object[] results = this.Invoke("UpdateGlobalSecurity", new object[] {
                        changes});
            failures = ((Failure[])(results[1]));
            return ((PermissionChange[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGlobalSecurityAsync(PermissionChange[] changes) {
            this.UpdateGlobalSecurityAsync(changes, null);
        }
        
        /// <remarks/>
        public void UpdateGlobalSecurityAsync(PermissionChange[] changes, object userState) {
            if ((this.UpdateGlobalSecurityOperationCompleted == null)) {
                this.UpdateGlobalSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGlobalSecurityOperationCompleted);
            }
            this.InvokeAsync("UpdateGlobalSecurity", new object[] {
                        changes}, this.UpdateGlobalSecurityOperationCompleted, userState);
        }
        
        private void OnUpdateGlobalSecurityOperationCompleted(object arg) {
            if ((this.UpdateGlobalSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGlobalSecurityCompleted(this, new UpdateGlobalSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateItemSecurity", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityChange[] UpdateItemSecurity(string workspaceName, string workspaceOwner, SecurityChange[] changes, out Failure[] failures) {
            object[] results = this.Invoke("UpdateItemSecurity", new object[] {
                        workspaceName,
                        workspaceOwner,
                        changes});
            failures = ((Failure[])(results[1]));
            return ((SecurityChange[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateItemSecurityAsync(string workspaceName, string workspaceOwner, SecurityChange[] changes) {
            this.UpdateItemSecurityAsync(workspaceName, workspaceOwner, changes, null);
        }
        
        /// <remarks/>
        public void UpdateItemSecurityAsync(string workspaceName, string workspaceOwner, SecurityChange[] changes, object userState) {
            if ((this.UpdateItemSecurityOperationCompleted == null)) {
                this.UpdateItemSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateItemSecurityOperationCompleted);
            }
            this.InvokeAsync("UpdateItemSecurity", new object[] {
                        workspaceName,
                        workspaceOwner,
                        changes}, this.UpdateItemSecurityOperationCompleted, userState);
        }
        
        private void OnUpdateItemSecurityOperationCompleted(object arg) {
            if ((this.UpdateItemSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateItemSecurityCompleted(this, new UpdateItemSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateLocalVersion", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLocalVersion(string workspaceName, string ownerName, LocalVersionUpdate[] updates) {
            this.Invoke("UpdateLocalVersion", new object[] {
                        workspaceName,
                        ownerName,
                        updates});
        }
        
        /// <remarks/>
        public void UpdateLocalVersionAsync(string workspaceName, string ownerName, LocalVersionUpdate[] updates) {
            this.UpdateLocalVersionAsync(workspaceName, ownerName, updates, null);
        }
        
        /// <remarks/>
        public void UpdateLocalVersionAsync(string workspaceName, string ownerName, LocalVersionUpdate[] updates, object userState) {
            if ((this.UpdateLocalVersionOperationCompleted == null)) {
                this.UpdateLocalVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLocalVersionOperationCompleted);
            }
            this.InvokeAsync("UpdateLocalVersion", new object[] {
                        workspaceName,
                        ownerName,
                        updates}, this.UpdateLocalVersionOperationCompleted, userState);
        }
        
        private void OnUpdateLocalVersionOperationCompleted(object arg) {
            if ((this.UpdateLocalVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLocalVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdatePendingState", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePendingState(string workspaceName, string workspaceOwner, PendingState[] updates) {
            this.Invoke("UpdatePendingState", new object[] {
                        workspaceName,
                        workspaceOwner,
                        updates});
        }
        
        /// <remarks/>
        public void UpdatePendingStateAsync(string workspaceName, string workspaceOwner, PendingState[] updates) {
            this.UpdatePendingStateAsync(workspaceName, workspaceOwner, updates, null);
        }
        
        /// <remarks/>
        public void UpdatePendingStateAsync(string workspaceName, string workspaceOwner, PendingState[] updates, object userState) {
            if ((this.UpdatePendingStateOperationCompleted == null)) {
                this.UpdatePendingStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePendingStateOperationCompleted);
            }
            this.InvokeAsync("UpdatePendingState", new object[] {
                        workspaceName,
                        workspaceOwner,
                        updates}, this.UpdatePendingStateOperationCompleted, userState);
        }
        
        private void OnUpdatePendingStateOperationCompleted(object arg) {
            if ((this.UpdatePendingStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePendingStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/UpdateWorkspace", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Workspace UpdateWorkspace(string oldWorkspaceName, string ownerName, Workspace newWorkspace, int supportedFeatures) {
            object[] results = this.Invoke("UpdateWorkspace", new object[] {
                        oldWorkspaceName,
                        ownerName,
                        newWorkspace,
                        supportedFeatures});
            return ((Workspace)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkspaceAsync(string oldWorkspaceName, string ownerName, Workspace newWorkspace, int supportedFeatures) {
            this.UpdateWorkspaceAsync(oldWorkspaceName, ownerName, newWorkspace, supportedFeatures, null);
        }
        
        /// <remarks/>
        public void UpdateWorkspaceAsync(string oldWorkspaceName, string ownerName, Workspace newWorkspace, int supportedFeatures, object userState) {
            if ((this.UpdateWorkspaceOperationCompleted == null)) {
                this.UpdateWorkspaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkspaceOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkspace", new object[] {
                        oldWorkspaceName,
                        ownerName,
                        newWorkspace,
                        supportedFeatures}, this.UpdateWorkspaceOperationCompleted, userState);
        }
        
        private void OnUpdateWorkspaceOperationCompleted(object arg) {
            if ((this.UpdateWorkspaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkspaceCompleted(this, new UpdateWorkspaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryPendingChangesById", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PendingChange[] QueryPendingChangesById(int[] pendingChangeIds, bool generateDownloadUrls) {
            object[] results = this.Invoke("QueryPendingChangesById", new object[] {
                        pendingChangeIds,
                        generateDownloadUrls});
            return ((PendingChange[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPendingChangesByIdAsync(int[] pendingChangeIds, bool generateDownloadUrls) {
            this.QueryPendingChangesByIdAsync(pendingChangeIds, generateDownloadUrls, null);
        }
        
        /// <remarks/>
        public void QueryPendingChangesByIdAsync(int[] pendingChangeIds, bool generateDownloadUrls, object userState) {
            if ((this.QueryPendingChangesByIdOperationCompleted == null)) {
                this.QueryPendingChangesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPendingChangesByIdOperationCompleted);
            }
            this.InvokeAsync("QueryPendingChangesById", new object[] {
                        pendingChangeIds,
                        generateDownloadUrls}, this.QueryPendingChangesByIdOperationCompleted, userState);
        }
        
        private void OnQueryPendingChangesByIdOperationCompleted(object arg) {
            if ((this.QueryPendingChangesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPendingChangesByIdCompleted(this, new QueryPendingChangesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/QueryItemsById", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Item[] QueryItemsById(int[] itemIds, int changeSet, bool generateDownloadUrls, int options) {
            object[] results = this.Invoke("QueryItemsById", new object[] {
                        itemIds,
                        changeSet,
                        generateDownloadUrls,
                        options});
            return ((Item[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryItemsByIdAsync(int[] itemIds, int changeSet, bool generateDownloadUrls, int options) {
            this.QueryItemsByIdAsync(itemIds, changeSet, generateDownloadUrls, options, null);
        }
        
        /// <remarks/>
        public void QueryItemsByIdAsync(int[] itemIds, int changeSet, bool generateDownloadUrls, int options, object userState) {
            if ((this.QueryItemsByIdOperationCompleted == null)) {
                this.QueryItemsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryItemsByIdOperationCompleted);
            }
            this.InvokeAsync("QueryItemsById", new object[] {
                        itemIds,
                        changeSet,
                        generateDownloadUrls,
                        options}, this.QueryItemsByIdOperationCompleted, userState);
        }
        
        private void OnQueryItemsByIdOperationCompleted(object arg) {
            if ((this.QueryItemsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryItemsByIdCompleted(this, new QueryItemsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CreateTeamProjectFolder", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateTeamProjectFolder(TeamProjectFolderOptions teamProjectOptions) {
            this.Invoke("CreateTeamProjectFolder", new object[] {
                        teamProjectOptions});
        }
        
        /// <remarks/>
        public void CreateTeamProjectFolderAsync(TeamProjectFolderOptions teamProjectOptions) {
            this.CreateTeamProjectFolderAsync(teamProjectOptions, null);
        }
        
        /// <remarks/>
        public void CreateTeamProjectFolderAsync(TeamProjectFolderOptions teamProjectOptions, object userState) {
            if ((this.CreateTeamProjectFolderOperationCompleted == null)) {
                this.CreateTeamProjectFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTeamProjectFolderOperationCompleted);
            }
            this.InvokeAsync("CreateTeamProjectFolder", new object[] {
                        teamProjectOptions}, this.CreateTeamProjectFolderOperationCompleted, userState);
        }
        
        private void OnCreateTeamProjectFolderOperationCompleted(object arg) {
            if ((this.CreateTeamProjectFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTeamProjectFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03/CreateBranch", RequestNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", ResponseNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
            "/03", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckinResult CreateBranch(string sourcePath, string targetPath, VersionSpec version, Changeset info, CheckinNotificationInfo checkinNotificationInfo, Mapping[] mappings) {
            object[] results = this.Invoke("CreateBranch", new object[] {
                        sourcePath,
                        targetPath,
                        version,
                        info,
                        checkinNotificationInfo,
                        mappings});
            return ((CheckinResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBranchAsync(string sourcePath, string targetPath, VersionSpec version, Changeset info, CheckinNotificationInfo checkinNotificationInfo, Mapping[] mappings) {
            this.CreateBranchAsync(sourcePath, targetPath, version, info, checkinNotificationInfo, mappings, null);
        }
        
        /// <remarks/>
        public void CreateBranchAsync(string sourcePath, string targetPath, VersionSpec version, Changeset info, CheckinNotificationInfo checkinNotificationInfo, Mapping[] mappings, object userState) {
            if ((this.CreateBranchOperationCompleted == null)) {
                this.CreateBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBranchOperationCompleted);
            }
            this.InvokeAsync("CreateBranch", new object[] {
                        sourcePath,
                        targetPath,
                        version,
                        info,
                        checkinNotificationInfo,
                        mappings}, this.CreateBranchOperationCompleted, userState);
        }
        
        private void OnCreateBranchOperationCompleted(object arg) {
            if ((this.CreateBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBranchCompleted(this, new CreateBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum ConflictType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Get,
        
        /// <remarks/>
        Checkin,
        
        /// <remarks/>
        Local,
        
        /// <remarks/>
        Merge,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Changeset {
        
        private string commentField;
        
        private CheckinNote checkinNoteField;
        
        private PolicyOverrideInfo policyOverrideField;
        
        private PropertyValue[] propertiesField;
        
        private Change[] changesField;
        
        private string cmtrField;
        
        private System.DateTime dateField;
        
        private int csetField;
        
        private string ownerField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public CheckinNote CheckinNote {
            get {
                return this.checkinNoteField;
            }
            set {
                this.checkinNoteField = value;
            }
        }
        
        /// <remarks/>
        public PolicyOverrideInfo PolicyOverride {
            get {
                return this.policyOverrideField;
            }
            set {
                this.policyOverrideField = value;
            }
        }
        
        /// <remarks/>
        public PropertyValue[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public Change[] Changes {
            get {
                return this.changesField;
            }
            set {
                this.changesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cmtr {
            get {
                return this.cmtrField;
            }
            set {
                this.cmtrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int cset {
            get {
                return this.csetField;
            }
            set {
                this.csetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinNote {
        
        private CheckinNoteFieldValue[] valuesField;
        
        /// <remarks/>
        public CheckinNoteFieldValue[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinNoteFieldValue {
        
        private string nameField;
        
        private string valField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class TeamProjectFolderPermission {
        
        private string[] allowPermissionField;
        
        private string[] denyPermissionField;
        
        private string identField;
        
        /// <remarks/>
        public string[] AllowPermission {
            get {
                return this.allowPermissionField;
            }
            set {
                this.allowPermissionField = value;
            }
        }
        
        /// <remarks/>
        public string[] DenyPermission {
            get {
                return this.denyPermissionField;
            }
            set {
                this.denyPermissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                this.identField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class TeamProjectFolderOptions {
        
        private string teamProjectField;
        
        private string sourceProjectField;
        
        private string commentField;
        
        private TeamProjectFolderPermission[] permissionsField;
        
        private CheckinNoteFieldDefinition[] checkinNoteDefinitionField;
        
        private bool excField;
        
        private bool glocField;
        
        public TeamProjectFolderOptions() {
            this.excField = false;
            this.glocField = false;
        }
        
        /// <remarks/>
        public string TeamProject {
            get {
                return this.teamProjectField;
            }
            set {
                this.teamProjectField = value;
            }
        }
        
        /// <remarks/>
        public string SourceProject {
            get {
                return this.sourceProjectField;
            }
            set {
                this.sourceProjectField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public TeamProjectFolderPermission[] Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public CheckinNoteFieldDefinition[] CheckinNoteDefinition {
            get {
                return this.checkinNoteDefinitionField;
            }
            set {
                this.checkinNoteDefinitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool exc {
            get {
                return this.excField;
            }
            set {
                this.excField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool gloc {
            get {
                return this.glocField;
            }
            set {
                this.glocField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinNoteFieldDefinition {
        
        private string aiField;
        
        private string nameField;
        
        private bool reqField;
        
        private int doField;
        
        public CheckinNoteFieldDefinition() {
            this.reqField = false;
            this.doField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ai {
            get {
                return this.aiField;
            }
            set {
                this.aiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool req {
            get {
                return this.reqField;
            }
            set {
                this.reqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int @do {
            get {
                return this.doField;
            }
            set {
                this.doField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ConflictInformation {
        
        private ConflictType ctField;
        
        private int vfField;
        
        private int pcidField;
        
        private string slocalField;
        
        private string tlocalField;
        
        private int reField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ConflictType ct {
            get {
                return this.ctField;
            }
            set {
                this.ctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int vf {
            get {
                return this.vfField;
            }
            set {
                this.vfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int pcid {
            get {
                return this.pcidField;
            }
            set {
                this.pcidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string slocal {
            get {
                return this.slocalField;
            }
            set {
                this.slocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tlocal {
            get {
                return this.tlocalField;
            }
            set {
                this.tlocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int re {
            get {
                return this.reField;
            }
            set {
                this.reField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PendingState {
        
        private ConflictInformation conflictInfoField;
        
        private int idField;
        
        private int rtvField;
        
        public PendingState() {
            this.rtvField = 0;
        }
        
        /// <remarks/>
        public ConflictInformation ConflictInfo {
            get {
                return this.conflictInfoField;
            }
            set {
                this.conflictInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int rtv {
            get {
                return this.rtvField;
            }
            set {
                this.rtvField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LocalVersionUpdate {
        
        private int itemidField;
        
        private string tlocalField;
        
        private int lverField;
        
        public LocalVersionUpdate() {
            this.itemidField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tlocal {
            get {
                return this.tlocalField;
            }
            set {
                this.tlocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int lver {
            get {
                return this.lverField;
            }
            set {
                this.lverField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InheritanceChange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PermissionChange))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public abstract partial class SecurityChange {
        
        private string itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class InheritanceChange : SecurityChange {
        
        private bool inheritField;
        
        public InheritanceChange() {
            this.inheritField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool inherit {
            get {
                return this.inheritField;
            }
            set {
                this.inheritField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PermissionChange : SecurityChange {
        
        private string[] allowField;
        
        private string[] denyField;
        
        private string[] removeField;
        
        private string identField;
        
        /// <remarks/>
        public string[] Allow {
            get {
                return this.allowField;
            }
            set {
                this.allowField = value;
            }
        }
        
        /// <remarks/>
        public string[] Deny {
            get {
                return this.denyField;
            }
            set {
                this.denyField = value;
            }
        }
        
        /// <remarks/>
        public string[] Remove {
            get {
                return this.removeField;
            }
            set {
                this.removeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                this.identField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class VersionControlLink {
        
        private int typeField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Shelveset {
        
        private string commentField;
        
        private string policyOverrideCommentField;
        
        private CheckinNote checkinNoteField;
        
        private VersionControlLink[] linksField;
        
        private System.DateTime dateField;
        
        private string nameField;
        
        private string ownerField;
        
        private bool ceField;
        
        public Shelveset() {
            this.ceField = false;
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyOverrideComment {
            get {
                return this.policyOverrideCommentField;
            }
            set {
                this.policyOverrideCommentField = value;
            }
        }
        
        /// <remarks/>
        public CheckinNote CheckinNote {
            get {
                return this.checkinNoteField;
            }
            set {
                this.checkinNoteField = value;
            }
        }
        
        /// <remarks/>
        public VersionControlLink[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ce {
            get {
                return this.ceField;
            }
            set {
                this.ceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ItemMerge {
        
        private int sidField;
        
        private int svfField;
        
        private string ssiField;
        
        private int tidField;
        
        private int tvfField;
        
        private string tsiField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int sid {
            get {
                return this.sidField;
            }
            set {
                this.sidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int svf {
            get {
                return this.svfField;
            }
            set {
                this.svfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ssi {
            get {
                return this.ssiField;
            }
            set {
                this.ssiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tid {
            get {
                return this.tidField;
            }
            set {
                this.tidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tvf {
            get {
                return this.tvfField;
            }
            set {
                this.tvfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tsi {
            get {
                return this.tsiField;
            }
            set {
                this.tsiField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ChangesetMergeDetails {
        
        private ItemMerge[] mergedItemsField;
        
        private ItemMerge[] unmergedItemsField;
        
        private Changeset[] changesetsField;
        
        /// <remarks/>
        public ItemMerge[] MergedItems {
            get {
                return this.mergedItemsField;
            }
            set {
                this.mergedItemsField = value;
            }
        }
        
        /// <remarks/>
        public ItemMerge[] UnmergedItems {
            get {
                return this.unmergedItemsField;
            }
            set {
                this.unmergedItemsField = value;
            }
        }
        
        /// <remarks/>
        public Changeset[] Changesets {
            get {
                return this.changesetsField;
            }
            set {
                this.changesetsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ChangesetMerge {
        
        private int srcverField;
        
        private int tgtverField;
        
        private bool partField;
        
        public ChangesetMerge() {
            this.partField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int srcver {
            get {
                return this.srcverField;
            }
            set {
                this.srcverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tgtver {
            get {
                return this.tgtverField;
            }
            set {
                this.tgtverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool part {
            get {
                return this.partField;
            }
            set {
                this.partField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class MergeCandidate {
        
        private Changeset changesetField;
        
        private bool partField;
        
        public MergeCandidate() {
            this.partField = false;
        }
        
        /// <remarks/>
        public Changeset Changeset {
            get {
                return this.changesetField;
            }
            set {
                this.changesetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool part {
            get {
                return this.partField;
            }
            set {
                this.partField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ItemSecurity {
        
        private AccessEntry[] entriesField;
        
        private bool inheritField;
        
        private string itemField;
        
        private bool modField;
        
        public ItemSecurity() {
            this.inheritField = true;
            this.modField = true;
        }
        
        /// <remarks/>
        public AccessEntry[] Entries {
            get {
                return this.entriesField;
            }
            set {
                this.entriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool inherit {
            get {
                return this.inheritField;
            }
            set {
                this.inheritField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool mod {
            get {
                return this.modField;
            }
            set {
                this.modField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class AccessEntry {
        
        private string[] allowField;
        
        private string[] denyField;
        
        private string[] allowInheritedField;
        
        private string[] denyInheritedField;
        
        private string identField;
        
        /// <remarks/>
        public string[] Allow {
            get {
                return this.allowField;
            }
            set {
                this.allowField = value;
            }
        }
        
        /// <remarks/>
        public string[] Deny {
            get {
                return this.denyField;
            }
            set {
                this.denyField = value;
            }
        }
        
        /// <remarks/>
        public string[] AllowInherited {
            get {
                return this.allowInheritedField;
            }
            set {
                this.allowInheritedField = value;
            }
        }
        
        /// <remarks/>
        public string[] DenyInherited {
            get {
                return this.denyInheritedField;
            }
            set {
                this.denyInheritedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                this.identField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ExtendedItem {
        
        private bool isBranchField;
        
        private int lverField;
        
        private int didField;
        
        private int latestField;
        
        private ItemType typeField;
        
        private int encField;
        
        private int itemidField;
        
        private string localField;
        
        private string titemField;
        
        private string sitemField;
        
        private ChangeType chgField;
        
        private int chgExField;
        
        private bool ochgField;
        
        private LockLevel lockField;
        
        private string lownerField;
        
        private System.DateTime dateField;
        
        public ExtendedItem() {
            this.isBranchField = false;
            this.lverField = 0;
            this.didField = 0;
            this.latestField = 0;
            this.typeField = ItemType.Any;
            this.encField = -3;
            this.itemidField = 0;
            this.chgField = ChangeType.None;
            this.chgExField = 0;
            this.ochgField = false;
            this.lockField = LockLevel.None;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsBranch {
            get {
                return this.isBranchField;
            }
            set {
                this.isBranchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int lver {
            get {
                return this.lverField;
            }
            set {
                this.lverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int latest {
            get {
                return this.latestField;
            }
            set {
                this.latestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-3)]
        public int enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string titem {
            get {
                return this.titemField;
            }
            set {
                this.titemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sitem {
            get {
                return this.sitemField;
            }
            set {
                this.sitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType chg {
            get {
                return this.chgField;
            }
            set {
                this.chgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int chgEx {
            get {
                return this.chgExField;
            }
            set {
                this.chgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ochg {
            get {
                return this.ochgField;
            }
            set {
                this.ochgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(LockLevel.None)]
        public LockLevel @lock {
            get {
                return this.lockField;
            }
            set {
                this.lockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string lowner {
            get {
                return this.lownerField;
            }
            set {
                this.lownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum ItemType {
        
        /// <remarks/>
        Any,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        File,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum ChangeType {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Add = 2,
        
        /// <remarks/>
        Edit = 4,
        
        /// <remarks/>
        Encoding = 8,
        
        /// <remarks/>
        Rename = 16,
        
        /// <remarks/>
        Delete = 32,
        
        /// <remarks/>
        Undelete = 64,
        
        /// <remarks/>
        Branch = 128,
        
        /// <remarks/>
        Merge = 256,
        
        /// <remarks/>
        Lock = 512,
        
        /// <remarks/>
        Rollback = 1024,
        
        /// <remarks/>
        SourceRename = 2048,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum LockLevel {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Checkin,
        
        /// <remarks/>
        CheckOut,
        
        /// <remarks/>
        Unchanged,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LocalVersion {
        
        private string iField;
        
        private int vField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string i {
            get {
                return this.iField;
            }
            set {
                this.iField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int v {
            get {
                return this.vField;
            }
            set {
                this.vField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ItemSet {
        
        private string queryPathField;
        
        private string patternField;
        
        private Item[] itemsField;
        
        /// <remarks/>
        public string QueryPath {
            get {
                return this.queryPathField;
            }
            set {
                this.queryPathField = value;
            }
        }
        
        /// <remarks/>
        public string Pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
        
        /// <remarks/>
        public Item[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Item {
        
        private PropertyValue[] propertiesField;
        
        private int csField;
        
        private System.DateTime dateField;
        
        private int didField;
        
        private int encField;
        
        private ItemType typeField;
        
        private int itemidField;
        
        private string itemField;
        
        private string tzField;
        
        private string tzoField;
        
        private byte[] hashField;
        
        private long lenField;
        
        private string durlField;
        
        private bool isbranchField;
        
        public Item() {
            this.csField = 0;
            this.didField = 0;
            this.encField = -2;
            this.typeField = ItemType.Any;
            this.itemidField = 0;
            this.lenField = ((long)(0));
            this.isbranchField = false;
        }
        
        /// <remarks/>
        public PropertyValue[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int cs {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tz {
            get {
                return this.tzField;
            }
            set {
                this.tzField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tzo {
            get {
                return this.tzoField;
            }
            set {
                this.tzoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "0")]
        public long len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string durl {
            get {
                return this.durlField;
            }
            set {
                this.durlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isbranch {
            get {
                return this.isbranchField;
            }
            set {
                this.isbranchField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PropertyValue {
        
        private object valField;
        
        private string pnameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pname {
            get {
                return this.pnameField;
            }
            set {
                this.pnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class GlobalSecurity {
        
        private AccessEntry[] entriesField;
        
        private bool modField;
        
        public GlobalSecurity() {
            this.modField = true;
        }
        
        /// <remarks/>
        public AccessEntry[] Entries {
            get {
                return this.entriesField;
            }
            set {
                this.entriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool mod {
            get {
                return this.modField;
            }
            set {
                this.modField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class FileType {
        
        private string[] extensionsField;
        
        private string nameField;
        
        private bool multiField;
        
        /// <remarks/>
        public string[] Extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool multi {
            get {
                return this.multiField;
            }
            set {
                this.multiField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class BranchRelative {
        
        private Item branchFromItemField;
        
        private Item branchToItemField;
        
        private int reltoidField;
        
        private int relfromidField;
        
        private bool reqstdField;
        
        private int bctypeField;
        
        public BranchRelative() {
            this.reqstdField = false;
        }
        
        /// <remarks/>
        public Item BranchFromItem {
            get {
                return this.branchFromItemField;
            }
            set {
                this.branchFromItemField = value;
            }
        }
        
        /// <remarks/>
        public Item BranchToItem {
            get {
                return this.branchToItemField;
            }
            set {
                this.branchToItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int reltoid {
            get {
                return this.reltoidField;
            }
            set {
                this.reltoidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int relfromid {
            get {
                return this.relfromidField;
            }
            set {
                this.relfromidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool reqstd {
            get {
                return this.reqstdField;
            }
            set {
                this.reqstdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int bctype {
            get {
                return this.bctypeField;
            }
            set {
                this.bctypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Annotation {
        
        private string commentField;
        
        private string itemField;
        
        private int vField;
        
        private string nameField;
        
        private string valueField;
        
        private System.DateTime dateField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int v {
            get {
                return this.vField;
            }
            set {
                this.vField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ChangeRequest {
        
        private ItemSpec itemField;
        
        private VersionSpec vspecField;
        
        private RequestType reqField;
        
        private int didField;
        
        private int encField;
        
        private ItemType typeField;
        
        private LockLevel lockField;
        
        private string targetField;
        
        private ItemType targettypeField;
        
        public ChangeRequest() {
            this.reqField = RequestType.None;
            this.didField = 0;
            this.encField = -2;
            this.typeField = ItemType.Any;
            this.lockField = LockLevel.Unchanged;
            this.targettypeField = ItemType.Any;
        }
        
        /// <remarks/>
        public ItemSpec item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public VersionSpec vspec {
            get {
                return this.vspecField;
            }
            set {
                this.vspecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(RequestType.None)]
        public RequestType req {
            get {
                return this.reqField;
            }
            set {
                this.reqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(LockLevel.Unchanged)]
        public LockLevel @lock {
            get {
                return this.lockField;
            }
            set {
                this.lockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType targettype {
            get {
                return this.targettypeField;
            }
            set {
                this.targettypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ItemSpec {
        
        private string itemField;
        
        private RecursionType recurseField;
        
        private int didField;
        
        public ItemSpec() {
            this.recurseField = RecursionType.None;
            this.didField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(RecursionType.None)]
        public RecursionType recurse {
            get {
                return this.recurseField;
            }
            set {
                this.recurseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum RecursionType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        OneLevel,
        
        /// <remarks/>
        Full,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DateVersionSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabelVersionSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkspaceVersionSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LatestVersionSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangesetVersionSpec))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public abstract partial class VersionSpec {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class DateVersionSpec : VersionSpec {
        
        private System.DateTime dateField;
        
        private string otextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string otext {
            get {
                return this.otextField;
            }
            set {
                this.otextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LabelVersionSpec : VersionSpec {
        
        private string labelField;
        
        private string scopeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class WorkspaceVersionSpec : VersionSpec {
        
        private string nameField;
        
        private string ownerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LatestVersionSpec : VersionSpec {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class ChangesetVersionSpec : VersionSpec {
        
        private int csField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int cs {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum RequestType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Add,
        
        /// <remarks/>
        Branch,
        
        /// <remarks/>
        Encoding,
        
        /// <remarks/>
        Edit,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Lock,
        
        /// <remarks/>
        Rename,
        
        /// <remarks/>
        Undelete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Conflict {
        
        private int cidField;
        
        private int pcidField;
        
        private ChangeType ychgField;
        
        private int ychgExField;
        
        private string ysitemField;
        
        private string ysitemsrcField;
        
        private int yencField;
        
        private ItemType ytypeField;
        
        private int yverField;
        
        private int yitemidField;
        
        private int ydidField;
        
        private ChangeType ylchgField;
        
        private int ylchgExField;
        
        private int ylmverField;
        
        private string bsitemField;
        
        private int bencField;
        
        private int bitemidField;
        
        private int bverField;
        
        private byte[] bhashField;
        
        private int bdidField;
        
        private ItemType btypeField;
        
        private ChangeType bchgField;
        
        private int bchgExField;
        
        private int titemidField;
        
        private int tverField;
        
        private string tsitemField;
        
        private int tencField;
        
        private byte[] thashField;
        
        private int tdidField;
        
        private ItemType ttypeField;
        
        private int tlmverField;
        
        private int tverfField;
        
        private int tctypField;
        
        private string srclitemField;
        
        private string tgtlitemField;
        
        private ConflictType ctypeField;
        
        private int reasonField;
        
        private bool isnamecflictField;
        
        private bool isforcedField;
        
        private Resolution resField;
        
        private bool isresolvedField;
        
        private string bdurlField;
        
        private string tdurlField;
        
        private string ydurlField;
        
        private int coptField;
        
        public Conflict() {
            this.ylchgExField = 0;
            this.bchgField = ChangeType.None;
            this.bchgExField = 0;
            this.resField = Resolution.None;
            this.coptField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int pcid {
            get {
                return this.pcidField;
            }
            set {
                this.pcidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChangeType ychg {
            get {
                return this.ychgField;
            }
            set {
                this.ychgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ychgEx {
            get {
                return this.ychgExField;
            }
            set {
                this.ychgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ysitem {
            get {
                return this.ysitemField;
            }
            set {
                this.ysitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ysitemsrc {
            get {
                return this.ysitemsrcField;
            }
            set {
                this.ysitemsrcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int yenc {
            get {
                return this.yencField;
            }
            set {
                this.yencField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ItemType ytype {
            get {
                return this.ytypeField;
            }
            set {
                this.ytypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int yver {
            get {
                return this.yverField;
            }
            set {
                this.yverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int yitemid {
            get {
                return this.yitemidField;
            }
            set {
                this.yitemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ydid {
            get {
                return this.ydidField;
            }
            set {
                this.ydidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChangeType ylchg {
            get {
                return this.ylchgField;
            }
            set {
                this.ylchgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ylchgEx {
            get {
                return this.ylchgExField;
            }
            set {
                this.ylchgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ylmver {
            get {
                return this.ylmverField;
            }
            set {
                this.ylmverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string bsitem {
            get {
                return this.bsitemField;
            }
            set {
                this.bsitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int benc {
            get {
                return this.bencField;
            }
            set {
                this.bencField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int bitemid {
            get {
                return this.bitemidField;
            }
            set {
                this.bitemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int bver {
            get {
                return this.bverField;
            }
            set {
                this.bverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] bhash {
            get {
                return this.bhashField;
            }
            set {
                this.bhashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int bdid {
            get {
                return this.bdidField;
            }
            set {
                this.bdidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ItemType btype {
            get {
                return this.btypeField;
            }
            set {
                this.btypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType bchg {
            get {
                return this.bchgField;
            }
            set {
                this.bchgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int bchgEx {
            get {
                return this.bchgExField;
            }
            set {
                this.bchgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int titemid {
            get {
                return this.titemidField;
            }
            set {
                this.titemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tver {
            get {
                return this.tverField;
            }
            set {
                this.tverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tsitem {
            get {
                return this.tsitemField;
            }
            set {
                this.tsitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tenc {
            get {
                return this.tencField;
            }
            set {
                this.tencField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] thash {
            get {
                return this.thashField;
            }
            set {
                this.thashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tdid {
            get {
                return this.tdidField;
            }
            set {
                this.tdidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ItemType ttype {
            get {
                return this.ttypeField;
            }
            set {
                this.ttypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tlmver {
            get {
                return this.tlmverField;
            }
            set {
                this.tlmverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tverf {
            get {
                return this.tverfField;
            }
            set {
                this.tverfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int tctyp {
            get {
                return this.tctypField;
            }
            set {
                this.tctypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string srclitem {
            get {
                return this.srclitemField;
            }
            set {
                this.srclitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tgtlitem {
            get {
                return this.tgtlitemField;
            }
            set {
                this.tgtlitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ConflictType ctype {
            get {
                return this.ctypeField;
            }
            set {
                this.ctypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isnamecflict {
            get {
                return this.isnamecflictField;
            }
            set {
                this.isnamecflictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isforced {
            get {
                return this.isforcedField;
            }
            set {
                this.isforcedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(Resolution.None)]
        public Resolution res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isresolved {
            get {
                return this.isresolvedField;
            }
            set {
                this.isresolvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string bdurl {
            get {
                return this.bdurlField;
            }
            set {
                this.bdurlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tdurl {
            get {
                return this.tdurlField;
            }
            set {
                this.tdurlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ydurl {
            get {
                return this.ydurlField;
            }
            set {
                this.ydurlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int copt {
            get {
                return this.coptField;
            }
            set {
                this.coptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum Resolution {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AcceptMerge,
        
        /// <remarks/>
        AcceptYours,
        
        /// <remarks/>
        AcceptTheirs,
        
        /// <remarks/>
        DeleteConflict,
        
        /// <remarks/>
        AcceptYoursRenameTheirs,
        
        /// <remarks/>
        OverwriteLocal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LabelItemSpec {
        
        private ItemSpec itemSpecField;
        
        private VersionSpec versionField;
        
        private bool exField;
        
        public LabelItemSpec() {
            this.exField = false;
        }
        
        /// <remarks/>
        public ItemSpec ItemSpec {
            get {
                return this.itemSpecField;
            }
            set {
                this.itemSpecField = value;
            }
        }
        
        /// <remarks/>
        public VersionSpec Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ex {
            get {
                return this.exField;
            }
            set {
                this.exField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class VersionControlLabel {
        
        private string commentField;
        
        private Item[] itemsField;
        
        private System.DateTime dateField;
        
        private string nameField;
        
        private string ownerField;
        
        private string scopeField;
        
        private int lidField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public Item[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int lid {
            get {
                return this.lidField;
            }
            set {
                this.lidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class RepositoryProperties {
        
        private System.Guid idField;
        
        private string nameField;
        
        private int lcsetField;
        
        private string verField;
        
        private byte[] dkeyField;
        
        private int featuresField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int lcset {
            get {
                return this.lcsetField;
            }
            set {
                this.lcsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ver {
            get {
                return this.verField;
            }
            set {
                this.verField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] dkey {
            get {
                return this.dkeyField;
            }
            set {
                this.dkeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class GetOperation {
        
        private byte[] hashValueField;
        
        private PropertyValue[] propertiesField;
        
        private ItemType typeField;
        
        private int itemidField;
        
        private string slocalField;
        
        private string tlocalField;
        
        private string titemField;
        
        private int sverField;
        
        private int lverField;
        
        private int didField;
        
        private int chgExField;
        
        private ChangeType chgField;
        
        private LockLevel lockField;
        
        private bool ilField;
        
        private int pcidField;
        
        private bool cnflctField;
        
        private ChangeType cnflctchgField;
        
        private int cnflctchgExField;
        
        private int cnflctitemidField;
        
        private byte nmscnflctField;
        
        private string durlField;
        
        public GetOperation() {
            this.typeField = ItemType.Any;
            this.itemidField = 0;
            this.sverField = 0;
            this.lverField = 0;
            this.didField = 0;
            this.chgExField = 0;
            this.chgField = ChangeType.None;
            this.lockField = LockLevel.None;
            this.ilField = true;
            this.pcidField = 0;
            this.cnflctField = false;
            this.cnflctchgField = ChangeType.None;
            this.cnflctchgExField = 0;
            this.cnflctitemidField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] HashValue {
            get {
                return this.hashValueField;
            }
            set {
                this.hashValueField = value;
            }
        }
        
        /// <remarks/>
        public PropertyValue[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string slocal {
            get {
                return this.slocalField;
            }
            set {
                this.slocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tlocal {
            get {
                return this.tlocalField;
            }
            set {
                this.tlocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string titem {
            get {
                return this.titemField;
            }
            set {
                this.titemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int sver {
            get {
                return this.sverField;
            }
            set {
                this.sverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int lver {
            get {
                return this.lverField;
            }
            set {
                this.lverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int chgEx {
            get {
                return this.chgExField;
            }
            set {
                this.chgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType chg {
            get {
                return this.chgField;
            }
            set {
                this.chgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(LockLevel.None)]
        public LockLevel @lock {
            get {
                return this.lockField;
            }
            set {
                this.lockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool il {
            get {
                return this.ilField;
            }
            set {
                this.ilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int pcid {
            get {
                return this.pcidField;
            }
            set {
                this.pcidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool cnflct {
            get {
                return this.cnflctField;
            }
            set {
                this.cnflctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType cnflctchg {
            get {
                return this.cnflctchgField;
            }
            set {
                this.cnflctchgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int cnflctchgEx {
            get {
                return this.cnflctchgExField;
            }
            set {
                this.cnflctchgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int cnflctitemid {
            get {
                return this.cnflctitemidField;
            }
            set {
                this.cnflctitemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte nmscnflct {
            get {
                return this.nmscnflctField;
            }
            set {
                this.nmscnflctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string durl {
            get {
                return this.durlField;
            }
            set {
                this.durlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class GetRequest {
        
        private ItemSpec itemSpecField;
        
        private VersionSpec versionSpecField;
        
        /// <remarks/>
        public ItemSpec ItemSpec {
            get {
                return this.itemSpecField;
            }
            set {
                this.itemSpecField = value;
            }
        }
        
        /// <remarks/>
        public VersionSpec VersionSpec {
            get {
                return this.versionSpecField;
            }
            set {
                this.versionSpecField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PendingChange {
        
        private MergeSource[] mergeSourcesField;
        
        private int chgExField;
        
        private ChangeType chgField;
        
        private System.DateTime dateField;
        
        private int didField;
        
        private ItemType typeField;
        
        private int encField;
        
        private int itemidField;
        
        private string localField;
        
        private LockLevel lockField;
        
        private string itemField;
        
        private string srclocalField;
        
        private string srcitemField;
        
        private int svrfmField;
        
        private int sdiField;
        
        private int verField;
        
        private byte[] hashField;
        
        private byte[] uhashField;
        
        private int pcidField;
        
        private string durlField;
        
        private string shelvedurlField;
        
        public PendingChange() {
            this.chgExField = 0;
            this.chgField = ChangeType.None;
            this.didField = 0;
            this.typeField = ItemType.Any;
            this.encField = -2;
            this.itemidField = 0;
            this.lockField = LockLevel.None;
            this.svrfmField = 0;
            this.sdiField = 0;
            this.verField = 0;
            this.pcidField = 0;
        }
        
        /// <remarks/>
        public MergeSource[] MergeSources {
            get {
                return this.mergeSourcesField;
            }
            set {
                this.mergeSourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int chgEx {
            get {
                return this.chgExField;
            }
            set {
                this.chgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType chg {
            get {
                return this.chgField;
            }
            set {
                this.chgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int did {
            get {
                return this.didField;
            }
            set {
                this.didField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ItemType.Any)]
        public ItemType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int enc {
            get {
                return this.encField;
            }
            set {
                this.encField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(LockLevel.None)]
        public LockLevel @lock {
            get {
                return this.lockField;
            }
            set {
                this.lockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string srclocal {
            get {
                return this.srclocalField;
            }
            set {
                this.srclocalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string srcitem {
            get {
                return this.srcitemField;
            }
            set {
                this.srcitemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int svrfm {
            get {
                return this.svrfmField;
            }
            set {
                this.svrfmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int sdi {
            get {
                return this.sdiField;
            }
            set {
                this.sdiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ver {
            get {
                return this.verField;
            }
            set {
                this.verField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] uhash {
            get {
                return this.uhashField;
            }
            set {
                this.uhashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int pcid {
            get {
                return this.pcidField;
            }
            set {
                this.pcidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string durl {
            get {
                return this.durlField;
            }
            set {
                this.durlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string shelvedurl {
            get {
                return this.shelvedurlField;
            }
            set {
                this.shelvedurlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class MergeSource {
        
        private string sField;
        
        private int vfField;
        
        private int vtField;
        
        private bool rField;
        
        public MergeSource() {
            this.rField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string s {
            get {
                return this.sField;
            }
            set {
                this.sField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int vf {
            get {
                return this.vfField;
            }
            set {
                this.vfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int vt {
            get {
                return this.vtField;
            }
            set {
                this.vtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PendingSet {
        
        private PendingChange[] pendingChangesField;
        
        private string computerField;
        
        private string ownerField;
        
        private string nameField;
        
        private PendingSetType typeField;
        
        /// <remarks/>
        public PendingChange[] PendingChanges {
            get {
                return this.pendingChangesField;
            }
            set {
                this.pendingChangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string computer {
            get {
                return this.computerField;
            }
            set {
                this.computerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PendingSetType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum PendingSetType {
        
        /// <remarks/>
        Workspace,
        
        /// <remarks/>
        Shelveset,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class LabelResult {
        
        private string labelField;
        
        private string scopeField;
        
        private LabelResultStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LabelResultStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum LabelResultStatus {
        
        /// <remarks/>
        Created,
        
        /// <remarks/>
        Updated,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkingFolder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Mapping {
        
        private string itemField;
        
        private WorkingFolderType typeField;
        
        private int depthField;
        
        public Mapping() {
            this.typeField = WorkingFolderType.Map;
            this.depthField = 120;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(WorkingFolderType.Map)]
        public WorkingFolderType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(120)]
        public int depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum WorkingFolderType {
        
        /// <remarks/>
        Map,
        
        /// <remarks/>
        Cloak,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class WorkingFolder : Mapping {
        
        private string localField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Workspace {
        
        private string commentField;
        
        private WorkingFolder[] foldersField;
        
        private System.DateTime lastAccessDateField;
        
        private string computerField;
        
        private string nameField;
        
        private string ownerField;
        
        private int permissionsField;
        
        private string securitytokenField;
        
        private string ownertypeField;
        
        private string owneridField;
        
        public Workspace() {
            this.permissionsField = 0;
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public WorkingFolder[] Folders {
            get {
                return this.foldersField;
            }
            set {
                this.foldersField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessDate {
            get {
                return this.lastAccessDateField;
            }
            set {
                this.lastAccessDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string computer {
            get {
                return this.computerField;
            }
            set {
                this.computerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securitytoken {
            get {
                return this.securitytokenField;
            }
            set {
                this.securitytokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ownertype {
            get {
                return this.ownertypeField;
            }
            set {
                this.ownertypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ownerid {
            get {
                return this.owneridField;
            }
            set {
                this.owneridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinResult {
        
        private string[] undoneServerItemsField;
        
        private Item[] implicitItemsField;
        
        private int csetField;
        
        private System.DateTime dateField;
        
        private int stateField;
        
        private int ticketField;
        
        /// <remarks/>
        public string[] UndoneServerItems {
            get {
                return this.undoneServerItemsField;
            }
            set {
                this.undoneServerItemsField = value;
            }
        }
        
        /// <remarks/>
        public Item[] ImplicitItems {
            get {
                return this.implicitItemsField;
            }
            set {
                this.implicitItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int cset {
            get {
                return this.csetField;
            }
            set {
                this.csetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Warning {
        
        private WarningType wrnField;
        
        private int chgExField;
        
        private ChangeType chgField;
        
        private string userField;
        
        private string cppField;
        
        private string wsField;
        
        public Warning() {
            this.wrnField = WarningType.ResourcePendingChangeWarning;
            this.chgExField = 0;
            this.chgField = ChangeType.None;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(WarningType.ResourcePendingChangeWarning)]
        public WarningType wrn {
            get {
                return this.wrnField;
            }
            set {
                this.wrnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int chgEx {
            get {
                return this.chgExField;
            }
            set {
                this.chgExField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ChangeType.None)]
        public ChangeType chg {
            get {
                return this.chgField;
            }
            set {
                this.chgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cpp {
            get {
                return this.cppField;
            }
            set {
                this.cppField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ws {
            get {
                return this.wsField;
            }
            set {
                this.wsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum WarningType {
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        ResourcePendingChangeWarning,
        
        /// <remarks/>
        NamespacePendingChangeWarning,
        
        /// <remarks/>
        StaleVersionWarning,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Failure {
        
        private Warning[] warningsField;
        
        private string messageField;
        
        private RequestType reqField;
        
        private string codeField;
        
        private SeverityType sevField;
        
        private string computerField;
        
        private string identField;
        
        private string localField;
        
        private string resField;
        
        private string itemField;
        
        private int itemidField;
        
        private string wsField;
        
        private string ownerField;
        
        public Failure() {
            this.reqField = RequestType.None;
            this.sevField = SeverityType.Error;
            this.itemidField = 0;
        }
        
        /// <remarks/>
        public Warning[] Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(RequestType.None)]
        public RequestType req {
            get {
                return this.reqField;
            }
            set {
                this.reqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SeverityType.Error)]
        public SeverityType sev {
            get {
                return this.sevField;
            }
            set {
                this.sevField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string computer {
            get {
                return this.computerField;
            }
            set {
                this.computerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                this.identField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ws {
            get {
                return this.wsField;
            }
            set {
                this.wsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum SeverityType {
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Warning,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinNotificationWorkItemInfo {
        
        private int idField;
        
        private CheckinWorkItemAction checkinActionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public CheckinWorkItemAction CheckinAction {
            get {
                return this.checkinActionField;
            }
            set {
                this.checkinActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum CheckinWorkItemAction {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Resolve,
        
        /// <remarks/>
        Associate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class CheckinNotificationInfo {
        
        private CheckinNotificationWorkItemInfo[] workItemInfoField;
        
        /// <remarks/>
        public CheckinNotificationWorkItemInfo[] WorkItemInfo {
            get {
                return this.workItemInfoField;
            }
            set {
                this.workItemInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class Change {
        
        private Item itemField;
        
        private MergeSource[] mergeSourcesField;
        
        private ChangeType typeField;
        
        private int typeExField;
        
        /// <remarks/>
        public Item Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public MergeSource[] MergeSources {
            get {
                return this.mergeSourcesField;
            }
            set {
                this.mergeSourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChangeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int typeEx {
            get {
                return this.typeExField;
            }
            set {
                this.typeExField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PolicyFailureInfo {
        
        private string policyNameField;
        
        private string messageField;
        
        /// <remarks/>
        public string PolicyName {
            get {
                return this.policyNameField;
            }
            set {
                this.policyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public partial class PolicyOverrideInfo {
        
        private string commentField;
        
        private PolicyFailureInfo[] policyFailuresField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public PolicyFailureInfo[] PolicyFailures {
            get {
                return this.policyFailuresField;
            }
            set {
                this.policyFailuresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum CheckinOptions {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        ValidateCheckinOwner = 2,
        
        /// <remarks/>
        SuppressEvent = 4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum LabelChildOption {
        
        /// <remarks/>
        Fail,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Merge,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum MergeOptions {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        ForceMerge = 2,
        
        /// <remarks/>
        Baseless = 4,
        
        /// <remarks/>
        NoMerge = 8,
        
        /// <remarks/>
        AlwaysAcceptMine = 16,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/VersionControl/ClientServices" +
        "/03")]
    public enum DeletedState {
        
        /// <remarks/>
        NonDeleted,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        Any,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddConflictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckAuthenticationCompletedEventHandler(object sender, CheckAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckInCompletedEventHandler(object sender, CheckInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckinResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckinResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckPendingChangesCompletedEventHandler(object sender, CheckPendingChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPendingChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPendingChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Failure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateAnnotationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateCheckinNoteDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateWorkspaceCompletedEventHandler(object sender, CreateWorkspaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorkspaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorkspaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Workspace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Workspace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteAnnotationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteLabelCompletedEventHandler(object sender, DeleteLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LabelResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LabelResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteShelvesetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteWorkspaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DestroyCompletedEventHandler(object sender, DestroyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestroyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DestroyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Item[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Item[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public PendingSet[] pendingChanges {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingSet[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public PendingSet[] shelvedChanges {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingSet[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOperation[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRepositoryPropertiesCompletedEventHandler(object sender, GetRepositoryPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepositoryPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepositoryPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RepositoryProperties Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepositoryProperties)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LabelItemCompletedEventHandler(object sender, LabelItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LabelItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LabelItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LabelResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LabelResult[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MergeCompletedEventHandler(object sender, MergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public Conflict[] conflicts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conflict[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PendChangesCompletedEventHandler(object sender, PendChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PendChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PendChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAnnotationCompletedEventHandler(object sender, QueryAnnotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Annotation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Annotation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBranchesCompletedEventHandler(object sender, QueryBranchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBranchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBranchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BranchRelative[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BranchRelative[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryChangesetCompletedEventHandler(object sender, QueryChangesetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryChangesetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryChangesetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Changeset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Changeset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryChangesForChangesetCompletedEventHandler(object sender, QueryChangesForChangesetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryChangesForChangesetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryChangesForChangesetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Change[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Change[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCheckinNoteDefinitionCompletedEventHandler(object sender, QueryCheckinNoteDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCheckinNoteDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCheckinNoteDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckinNoteFieldDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckinNoteFieldDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCheckinNoteFieldNamesCompletedEventHandler(object sender, QueryCheckinNoteFieldNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCheckinNoteFieldNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCheckinNoteFieldNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryConflictsCompletedEventHandler(object sender, QueryConflictsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryConflictsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryConflictsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conflict[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conflict[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryEffectiveGlobalPermissionsCompletedEventHandler(object sender, QueryEffectiveGlobalPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryEffectiveGlobalPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryEffectiveGlobalPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryEffectiveItemPermissionsCompletedEventHandler(object sender, QueryEffectiveItemPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryEffectiveItemPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryEffectiveItemPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryFileTypesCompletedEventHandler(object sender, QueryFileTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFileTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryFileTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryGlobalPermissionsCompletedEventHandler(object sender, QueryGlobalPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGlobalPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGlobalPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalSecurity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalSecurity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryHistoryCompletedEventHandler(object sender, QueryHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Changeset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Changeset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryItemsCompletedEventHandler(object sender, QueryItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryLocalVersionsCompletedEventHandler(object sender, QueryLocalVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLocalVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLocalVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocalVersion[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocalVersion[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryItemsExtendedCompletedEventHandler(object sender, QueryItemsExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryItemsExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryItemsExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExtendedItem[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExtendedItem[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryItemPermissionsCompletedEventHandler(object sender, QueryItemPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryItemPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryItemPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemSecurity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemSecurity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryLabelsCompletedEventHandler(object sender, QueryLabelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLabelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLabelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VersionControlLabel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VersionControlLabel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMergeCandidatesCompletedEventHandler(object sender, QueryMergeCandidatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMergeCandidatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMergeCandidatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MergeCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MergeCandidate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMergesCompletedEventHandler(object sender, QueryMergesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMergesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMergesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangesetMerge[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangesetMerge[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Changeset[] changesets {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Changeset[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMergesWithDetailsCompletedEventHandler(object sender, QueryMergesWithDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMergesWithDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMergesWithDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangesetMergeDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangesetMergeDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPendingSetsCompletedEventHandler(object sender, QueryPendingSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPendingSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPendingSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingSet[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPendingChangesForWorkspaceCompletedEventHandler(object sender, QueryPendingChangesForWorkspaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPendingChangesForWorkspaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPendingChangesForWorkspaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingChange[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingChange[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryShelvedChangesCompletedEventHandler(object sender, QueryShelvedChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryShelvedChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryShelvedChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingSet[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryShelvesetsCompletedEventHandler(object sender, QueryShelvesetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryShelvesetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryShelvesetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shelveset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shelveset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryWorkspaceCompletedEventHandler(object sender, QueryWorkspaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryWorkspaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryWorkspaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Workspace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Workspace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryWorkspacesCompletedEventHandler(object sender, QueryWorkspacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryWorkspacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryWorkspacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Workspace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Workspace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RefreshIdentityDisplayNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveLocalConflictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResolveCompletedEventHandler(object sender, ResolveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public GetOperation[] undoOperations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public Conflict[] resolvedConflicts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conflict[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetFileTypesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ShelveCompletedEventHandler(object sender, ShelveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShelveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShelveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Failure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UndoPendingChangesCompletedEventHandler(object sender, UndoPendingChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UndoPendingChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UndoPendingChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnlabelItemCompletedEventHandler(object sender, UnlabelItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlabelItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlabelItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LabelResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LabelResult[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnshelveCompletedEventHandler(object sender, UnshelveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnshelveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnshelveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shelveset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shelveset)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public GetOperation[] getOperations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOperation[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateChangesetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCheckinNoteFieldNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateGlobalSecurityCompletedEventHandler(object sender, UpdateGlobalSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGlobalSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGlobalSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionChange[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionChange[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateItemSecurityCompletedEventHandler(object sender, UpdateItemSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateItemSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateItemSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityChange[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityChange[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Failure[] failures {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Failure[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateLocalVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdatePendingStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWorkspaceCompletedEventHandler(object sender, UpdateWorkspaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkspaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkspaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Workspace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Workspace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPendingChangesByIdCompletedEventHandler(object sender, QueryPendingChangesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPendingChangesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPendingChangesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingChange[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingChange[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryItemsByIdCompletedEventHandler(object sender, QueryItemsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryItemsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryItemsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Item[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Item[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateTeamProjectFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateBranchCompletedEventHandler(object sender, CreateBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckinResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckinResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591